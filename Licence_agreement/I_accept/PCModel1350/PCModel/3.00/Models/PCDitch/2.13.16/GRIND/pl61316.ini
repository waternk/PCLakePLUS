defpermanent aDayInitVeg 367
defpermanent bDayInitPhra 367
defpermanent aDepthStart 0
sTime = t;
TimeYears = sTime / DaysPerYear;
Day = sTime - floor(TimeYears) * DaysPerYear;
Years = YearZero + TimeYears;
if (false == InclSeason) 
uTm = cTmAve 
elseif (ReadTemp == true) 
uTm = mTemp 
else
uTm = cTmAve - cTmVar * cos(2.0*Pi*(sTime + TenDays - cTimeLag) / DaysPerYear) 
end;
if (ReadVWind == true)
uVWind = mVWind 
else
uVWind = cVWind 
end;
if (false == InclSeason) 
ufDay = cfDayAve 
else
ufDay = cfDayAve - cfDayVar * cos(2.0*Pi*(sTime+TenDays) / DaysPerYear) 
end;
if (false == InclSeason) 
uLDay = cLDayAve 
elseif (ReadLOut == true) 
uLDay = 0.0 
else
uLDay = cLDayAve - cLDayVar * cos(2.0*Pi*(sTime+TenDays) / DaysPerYear) 
end;
if (false == InclSeason) 
uLOut = uLDay / SecsPerDay / ufDay 
elseif (ReadLOut == true) 
uLOut = mLOut / ufDay 
else
uLOut = uLDay / SecsPerDay / ufDay 
end;
uLPARSurf = fPAR * (1.0 - fRefl) * uLOut;
aExtPhyt = cExtSpDiat * sDDiatW + cExtSpGren * sDGrenW + cExtSpBlue * sDBlueW;
aExtDet = cExtSpDet * sDDetW;
aExtIM = cExtSpIM * sDIMW;
aExtCoefOpen = cExtWat + aExtIM + aExtDet + aExtPhyt;
if (false == UseSeasonLoad) 
uQInSeason = 0.0 
elseif (Day < cDayApril1 - 0.5*cLengChange) 
uQInSeason = cQInWin 
elseif (Day < cDayApril1 + 0.5*cLengChange) 
uQInSeason = 0.5*(cQInWin + cQInSum) + 0.5*(cQInWin - cQInSum) * cos(Pi/cLengChange * (Day - cDayApril1)) 
elseif (Day < cDayOct1 - 0.5*cLengChange) 
uQInSeason = cQInSum 
elseif (Day < cDayOct1 + 0.5*cLengChange) 
uQInSeason = 0.5*(cQInWin + cQInSum) - 0.5*(cQInWin - cQInSum) * cos(Pi/cLengChange * (Day - cDayOct1)) 
else
uQInSeason = cQInWin 
end;
uQEvSinus = cQEvAve - cQEvVar * cos(2.0*Pi * (sTime + TenDays - cTimeLag) / DaysPerYear);
if (false == InclSeason) 
uQEv = cQEvAve 
elseif (ReadQEv == true) 
uQEv = mQEv 
else
uQEv = uQEvSinus 
end;
if ((Day >= cDayApril1 - 0.5*cLengChange) && (Day < cDayApril1 + 0.5*cLengChange)) 
uQInExtra = cQInExtraApril1 
elseif ( (Day >= cDayOct1 - 0.5*cLengChange) && (Day < cDayOct1 + 0.5*cLengChange) ) 
uQInExtra = cQInExtraOct1 
else
uQInExtra = 0.0 
end;
if ((Day >= cDayApril1 - 0.5*cLengChange) && (Day < cDayApril1 + 0.5*cLengChange)) 
uQOutExtra = cQOutExtraApril1 
elseif ( (Day >= cDayOct1 - 0.5*cLengChange) && (Day < cDayOct1 + 0.5*cLengChange) ) 
uQOutExtra = cQOutExtraOct1 
else
uQOutExtra = 0.0 
end;
if (ReadQIn == true) 
uQIn = mQIn 
elseif (UseSeasonLoad == true) 
uQIn = uQInSeason + uQInExtra 
else
uQIn = cQIn + uQInExtra 
end;
if (ReadQOut == true) 
uQOut = max(mQOut, (sDepthW - cDepthWMax) * mmPerm) 
else
uQOut = max(0.0, (uQIn - uQInExtra) - uQEv - cQInf) + uQOutExtra 
end;
uQDil = uQIn - uQEv;
ukDil = uQDil / mmPerm / sDepthW;
ukDilWat = uQIn / mmPerm / sDepthW;
ukOut = uQOut / mmPerm / sDepthW;
uTauWat = 1.0 / (ukDilWat+NearZero);
uTauSubst = 1.0 / (ukDil+NearZero);
if (false == InclTran) 
vTranDepthW = 0.0 
elseif (false == InclMarsh || fMarsh <= NearZero) 
vTranDepthW = (uQIn - uQEv - cQInf - uQOut) / mmPerm 
else
vTranDepthW = ((uQIn - uQEv - cQInf - uQOut) / mmPerm) / (1.0 + fMarsh) 
end;
if (InclMarsh == true && fMarsh > NearZero) 
akExchM = kExchMaxM * hfMarsh /(hfMarsh + fMarsh) + vTranDepthW / sDepthWM 
else
akExchM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
afVolMarsh = fMarsh * sDepthWM / sDepthW 
else
afVolMarsh = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
akExchL = akExchM * afVolMarsh 
else
akExchL = 0.0 
end;
oDPhytW = sDDiatW + sDGrenW + sDBlueW;
oPPhytW = sPDiatW + sPGrenW + sPBlueW;
oNPhytW = sNDiatW + sNGrenW + sNBlueW;
if (InclPhytS == true) 
aDPhytS = sDDiatS + sDGrenS + sDBlueS 
else
aDPhytS = NearZero 
end;
if (InclPhytS == true) 
aPPhytS = sPDiatS + sPGrenS + sPBlueS 
else
aPPhytS = NearZero 
end;
if (InclPhytS == true) 
aNPhytS = sNDiatS + sNGrenS + sNBlueS 
else
aNPhytS = NearZero 
end;
oDOMW = sDDetW + oDPhytW;
oDSestW = oDOMW + sDIMW;
oPOMW = oPPhytW + sPDetW;
oPSestW = oPPhytW + sPDetW + sPAIMW;
oPInorgW = sPO4W + sPAIMW;
oPTotW = oPSestW + sPO4W;
oNDissW = sNO3W + sNH4W;
oNOMW = oNPhytW + sNDetW;
oNSestW = oNOMW;
oNkjW = oNSestW + sNH4W;
oNTotW = oNkjW + sNO3W;
bPorS = (1.0 - fDTotS0) * (fDOrgS0 * cRhoOM + (1 - fDOrgS0) * cRhoIM) / cRhoWat / ( fDTotS0 + (1.0 - fDTotS0) * (fDOrgS0 * cRhoOM + (1 - fDOrgS0) * cRhoIM) / cRhoWat );
bPorCorS = ((bPorS )^ (bPorS + 1.0));
aDTotS = sDIMS + sDHumS + sDDetS;
aRhoTotS = aDTotS / cDepthS;
aRhoSolidS = (sDIMS * cRhoIM + (sDHumS + sDDetS) * cRhoOM) / aDTotS;
afDTotS = 1.0 / (1.0 + bPorS/(1.0-bPorS) * cRhoWat / aRhoSolidS);
afDOrgS = (sDHumS + sDDetS) / aDTotS;
afDetS = sDDetS / (sDHumS + sDDetS);
afDetTotS = sDDetS / (sDIMS + sDHumS + sDDetS);
aPInorgS = sPO4S + sPAIMS;
aPTotAvailS = sPDetS + aPInorgS + aPPhytS;
aPTotS = aPTotAvailS + sPHumS;
afPInorgS = aPInorgS / aDTotS;
afPTotS = aPTotS / aDTotS;
afPO4S = sPO4S / (aPTotAvailS + NearZero);
oPO4S = sPO4S / cDepthS / bPorS;
aNDissS = sNH4S + sNO3S;
aNkjAvailS = sNDetS + aNPhytS + sNH4S;
aNkjS = aNkjAvailS + sNHumS;
aNTotAvailS = aNkjAvailS + sNO3S;
aNTotS = aNkjS + sNO3S;
afNInorgS = aNDissS / aDTotS;
afNTotS = aNTotS / aDTotS;
oNO3S = sNO3S / cDepthS / bPorS;
oNH4S = sNH4S / cDepthS / bPorS;
oNDissS = aNDissS / cDepthS / bPorS;
rPDIMW = sPAIMW / sDIMW;
rPDIMS = sPAIMS / sDIMS;
rPDDetW = sPDetW / (sDDetW+NearZero);
rNDDetW = sNDetW / (sDDetW+NearZero);
rSiDDetW = sSiDetW / (sDDetW+NearZero);
rPDHumS = sPHumS / (sDHumS+NearZero);
rNDHumS = sNHumS / (sDHumS+NearZero);
rPDDetS = sPDetS / (sDDetS+NearZero);
rNDDetS = sNDetS / (sDDetS+NearZero);
rSiDDetS = sSiDetS / (sDDetS+NearZero);
if (InclMarsh == true && fMarsh > NearZero) 
oDPhytWM = sDDiatWM + sDGrenWM + sDBlueWM 
else
oDPhytWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
oPPhytWM = sPDiatWM + sPGrenWM + sPBlueWM 
else
oPPhytWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
oNPhytWM = sNDiatWM + sNGrenWM + sNBlueWM 
else
oNPhytWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
oSiDiatWM = cSiDDiat * sDDiatWM 
else
oSiDiatWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
oDOMWM = sDDetWM + oDPhytWM 
else
oDOMWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
oDSestWM = oDOMWM + sDIMWM 
else
oDSestWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
oPOMWM = oPPhytWM + sPDetWM 
else
oPOMWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
oPSestWM = oPPhytWM + sPDetWM + sPAIMWM 
else
oPSestWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
oPInorgWM = sPO4WM + sPAIMWM 
else
oPInorgWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
oPTotWM = oPSestWM + sPO4WM 
else
oPTotWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
oNDissWM = sNO3WM + sNH4WM 
else
oNDissWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
oNOMWM = oNPhytWM + sNDetWM 
else
oNOMWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
oNSestWM = oNOMWM 
else
oNSestWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
oNkjWM = oNSestWM + sNH4WM 
else
oNkjWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
oNTotWM = oNkjWM + sNO3WM 
else
oNTotWM = 0.0 
end;
bPorSM = (1.0 - fDTotSM0) * (fDOrgSM0 * cRhoOM +(1 - fDOrgSM0) * cRhoIM) / cRhoWat /(fDTotSM0 + (1.0 - fDTotSM0) * (fDOrgSM0 * cRhoOM +(1 - fDOrgSM0) * cRhoIM) / cRhoWat);
bPorCorSM = ((bPorSM )^ (bPorSM + 1.0));
if (InclMarsh == true && fMarsh > NearZero) 
aDTotSM = sDIMSM + sDHumSM + sDDetSM 
else
aDTotSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aRhoTotSM = aDTotSM / cDepthSM 
else
aRhoTotSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aRhoSolidSM = (sDIMSM * cRhoIM +(sDHumSM + sDDetSM) * cRhoOM) / aDTotSM 
else
aRhoSolidSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
afDTotSM = 1.0 /(1.0 + bPorSM/(1.0-bPorSM) * cRhoWat / aRhoSolidSM) 
else
afDTotSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
afDOrgSM = (sDHumSM + sDDetSM) / aDTotSM 
else
afDOrgSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
afDetSM = sDDetSM /(sDHumSM + sDDetSM) 
else
afDetSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
afDetTotSM = sDDetSM /(sDIMSM + sDHumSM + sDDetSM) 
else
afDetTotSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aPInorgSM = sPO4SM + sPAIMSM 
else
aPInorgSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aPTotAvailSM = sPDetSM + aPInorgSM 
else
aPTotAvailSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aPTotSM = aPTotAvailSM + sPHumSM 
else
aPTotSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
afPInorgSM = aPInorgSM / aDTotSM 
else
afPInorgSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
afPTotSM = aPTotSM / aDTotSM 
else
afPTotSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
afPO4SM = sPO4SM /(aPTotAvailSM + NearZero) 
else
afPO4SM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
oPO4SM = sPO4SM / cDepthSM / bPorSM 
else
oPO4SM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aNDissSM = sNH4SM + sNO3SM 
else
aNDissSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aNkjAvailSM = sNDetSM + sNH4SM 
else
aNkjAvailSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aNkjSM = aNkjAvailSM + sNHumSM 
else
aNkjSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aNTotAvailSM = aNkjAvailSM + sNO3SM 
else
aNTotAvailSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aNTotSM = aNkjSM + sNO3SM 
else
aNTotSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
afNInorgSM = aNDissSM / aDTotSM 
else
afNInorgSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
afNTotSM = aNTotSM / aDTotSM 
else
afNTotSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
oNO3SM = sNO3SM / cDepthSM / bPorSM 
else
oNO3SM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
oNH4SM = sNH4SM / cDepthSM / bPorSM 
else
oNH4SM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
oNDissSM = aNDissSM / cDepthSM / bPorSM 
else
oNDissSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
rPDIMWM = sPAIMWM / sDIMWM 
else
rPDIMWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
rPDIMSM = sPAIMSM / sDIMSM 
else
rPDIMSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
rPDDetWM = sPDetWM /(sDDetWM+NearZero) 
else
rPDDetWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
rNDDetWM = sNDetWM /(sDDetWM+NearZero) 
else
rNDDetWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
rSiDDetWM = sSiDetWM /(sDDetWM+NearZero) 
else
rSiDDetWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
rPDHumSM = sPHumSM /(sDHumSM+NearZero) 
else
rPDHumSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
rNDHumSM = sNHumSM /(sDHumSM+NearZero) 
else
rNDHumSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
rPDDetSM = sPDetSM /(sDDetSM+NearZero) 
else
rPDDetSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
rNDDetSM = sNDetSM /(sDDetSM+NearZero) 
else
rNDDetSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
rSiDDetSM = sSiDetSM /(sDDetSM+NearZero) 
else
rSiDDetSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aDTotM = ((sDIMWM + sDDetWM + oDPhytWM + sDZooM) * sDepthWM + sDIMSM + sDHumSM + sDDetSM + sDShootPhra + sDRootPhra) * fMarsh 
else
aDTotM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aPTotM = ((sPO4WM + sPDetWM + sPAIMWM + oPPhytWM + sPZooM) * sDepthWM + sPO4SM + sPHumSM + sPDetSM + sPAIMSM + sPShootPhra + sPRootPhra) * fMarsh 
else
aPTotM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aNTotM = ((sNH4WM + sNO3WM + sNDetWM + oNPhytWM + sNZooM) * sDepthWM + sNH4SM + sNO3SM + sNHumSM + sNDetSM + sNShootPhra + sNRootPhra) * fMarsh 
else
aNTotM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aSiTotM = ((sSiO2WM + sSiDetWM + oSiDiatWM) * sDepthWM + sSiDetSM) * fMarsh 
else
aSiTotM = 0.0 
end;
iPPulse = 1;
if (false == UseSeasonLoad) 
uPLoadSeason = 0.0 
elseif (Day < cDayApril1 - 0.5*cLengChange) 
uPLoadSeason = cPLoadWin 
elseif (Day < cDayApril1 + 0.5*cLengChange) 
uPLoadSeason = 0.5*(cPLoadWin + cPLoadSum) + 0.5*(cPLoadWin - cPLoadSum) * cos(Pi/cLengChange * (Day - cDayApril1)) 
elseif (Day < cDayOct1 - 0.5*cLengChange) 
uPLoadSeason = cPLoadSum 
elseif (Day < cDayOct1 + 0.5*cLengChange) 
uPLoadSeason = 0.5*(cPLoadWin + cPLoadSum) - 0.5*(cPLoadWin - cPLoadSum) * cos(Pi/cLengChange * (Day - cDayOct1)) 
else
uPLoadSeason = cPLoadWin 
end;
if (ReadPLoad == true && ReadNutFrac == true) 
uPLoad = mPLoadPO4 + mPLoadOrg 
elseif (ReadPLoad == true && false == ReadNutFrac) 
uPLoad = mPLoad 
elseif (UsePulseLoad == true) 
uPLoad = 0.0 
elseif (UseSeasonLoad == true) 
uPLoad = uPLoadSeason 
else
uPLoad = cPLoad 
end;
if (false == ReadPLoad) 
uPLoadPO4 = fPO4In * uPLoad 
elseif (ReadNutFrac == true) 
uPLoadPO4 = mPLoadPO4 
else
uPLoadPO4 = fPO4In * mPLoad 
end;
if (false == ReadPLoad) 
uPLoadOrg = (1.0 - fPO4In) * uPLoad 
elseif (ReadNutFrac == true) 
uPLoadOrg = mPLoadOrg 
else
uPLoadOrg = (1.0 - fPO4In) * mPLoad 
end;
if (false == InclSeason) 
uPLoadPhytTot = (((fPhytInSum + fPhytInWin)/2)*uPLoadOrg) 
elseif (ReadPLoadPhyt == true) 
uPLoadPhytTot = mPLoadPhytTot 
else
uPLoadPhytTot = ((fPhytInSum+fPhytInWin)/2.0 - (fPhytInSum-fPhytInWin)/2.0 * cos(2.0*Pi * (sTime + TenDays - cTimeLag) / DaysPerYear)) * uPLoadOrg 
end;
uPLoadDet = uPLoadOrg - uPLoadPhytTot;
uPLoadAIM = 0.0;
iNPulse = 1;
if (false == UseSeasonLoad) 
uNLoadSeason = 0.0 
elseif (Day < cDayApril1 - 0.5*cLengChange) 
uNLoadSeason = cNLoadWin 
elseif (Day < cDayApril1 + 0.5*cLengChange) 
uNLoadSeason = 0.5*(cNLoadWin + cNLoadSum) + 0.5*(cNLoadWin - cNLoadSum) * cos(Pi/cLengChange * (Day - cDayApril1)) 
elseif (Day < cDayOct1 - 0.5*cLengChange) 
uNLoadSeason = cNLoadSum 
elseif (Day < cDayOct1 + 0.5*cLengChange) 
uNLoadSeason = 0.5*(cNLoadWin + cNLoadSum) - 0.5*(cNLoadWin - cNLoadSum) * cos(Pi/cLengChange * (Day - cDayOct1)) 
else
uNLoadSeason = cNLoadWin 
end;
uNLoadPhytTot = cNPPhytIn * uPLoadPhytTot;
if (ReadNLoad == true && ReadNutFrac == true) 
uNLoad = mNLoadNH4 + mNLoadNO3 + mNLoadOrg 
elseif (ReadNLoad == true && false == ReadNutFrac) 
uNLoad = mNLoad 
elseif (UsePulseLoad == true) 
uNLoad = 0.0 
elseif (ReadPLoad == true) 
uNLoad = cNPLoadMeas * uPLoad 
elseif (UseSeasonLoad == true) 
uNLoad = uNLoadSeason 
else
uNLoad = cNLoad 
end;
if (false == ReadNLoad) 
uNLoadDet = min(cNPDetIn * uPLoadDet, uNLoad - uNLoadPhytTot) 
elseif (ReadNutFrac == true) 
uNLoadDet = 0.0 
else
uNLoadDet = min(cNPDetIn * uPLoadDet, uNLoad - uNLoadPhytTot) 
end;
if (false == ReadNLoad) 
uNLoadOrg = uNLoadPhytTot + uNLoadDet 
elseif (ReadNutFrac == true) 
uNLoadOrg = mNLoadOrg 
else
uNLoadOrg = uNLoadPhytTot + uNLoadDet 
end;
if (false == ReadNLoad) 
uNLoadDiss = uNLoad - uNLoadOrg 
elseif (ReadNutFrac == true) 
uNLoadDiss = 0.0 
else
uNLoadDiss = uNLoad - uNLoadOrg 
end;
if (false == ReadNLoad) 
uNLoadNH4 = fNH4DissIn * uNLoadDiss 
elseif (ReadNutFrac == true) 
uNLoadNH4 = mNLoadNH4 
else
uNLoadNH4 = fNH4DissIn * uNLoadDiss 
end;
if (false == ReadNLoad) 
uNLoadNO3 = (1.0 - fNH4DissIn) * uNLoadDiss 
elseif (ReadNutFrac == true) 
uNLoadNO3 = mNLoadNO3 
else
uNLoadNO3 = (1.0 - fNH4DissIn) * uNLoadDiss 
end;
uNTotIn = uNLoad / (uQIn / mmPerm + NearZero);
if (ReadDLoadDet == true) 
uDLoadDet = mDLoadDet 
else
uDLoadDet = uNLoadDet / cNDDetIn 
end;
uDLoadPhytTot = uNLoadPhytTot / cNDPhytIn;
if (ReadDLoadIM == true) 
uDLoadIM = mDLoadIM 
else
uDLoadIM = cDIMIn * uQIn / mmPerm 
end;
uDLoad = uDLoadIM + uDLoadDet + uDLoadPhytTot;
uPTotIn = uPLoad / (uQIn / mmPerm + NearZero);
uDLoadDiat = fDiatPhytIn * uDLoadPhytTot;
uPLoadDiat = fDiatPhytIn * uPLoadPhytTot;
uNLoadDiat = fDiatPhytIn * uNLoadPhytTot;
uDLoadGren = fGrenPhytIn * uDLoadPhytTot;
uPLoadGren = fGrenPhytIn * uPLoadPhytTot;
uNLoadGren = fGrenPhytIn * uNLoadPhytTot;
uDLoadBlue = fBluePhytIn * uDLoadPhytTot;
uPLoadBlue = fBluePhytIn * uPLoadPhytTot;
uNLoadBlue = fBluePhytIn * uNLoadPhytTot;
wDDilIM = ukDil * sDIMW;
wDDilDet = ukDil * sDDetW;
wPDilPO4 = ukDil * sPO4W;
wPDilDet = ukDil*sPDetW;
wPDilAIM = ukDil * sPAIMW;
wNDilNH4 = ukDil * sNH4W;
wNDilNO3 = ukDil * sNO3W;
wNDilDet = ukDil * sNDetW;
wO2Inflow = ukDilWat * cO2In;
wO2Outfl = ukDil * sO2W;
wDDilDiat = ukDil * sDDiatW;
wPDilDiat = ukDil * sPDiatW;
wNDilDiat = ukDil * sNDiatW;
wDDilGren = ukDil * sDGrenW;
wPDilGren = ukDil * sPGrenW;
wNDilGren = ukDil * sNGrenW;
wDDilBlue = ukDil * sDBlueW;
wPDilBlue = ukDil * sPBlueW;
wNDilBlue = ukDil * sNBlueW;
wDDilPhyt = wDDilDiat + wDDilGren + wDDilBlue;
wPDilPhyt = wPDilDiat + wPDilGren + wPDilBlue;
wNDilPhyt = wNDilDiat + wNDilGren + wNDilBlue;
wDOutflTot = ukOut * oDSestW;
wPOutflTot = ukOut * oPTotW;
wNOutflTot = ukOut * oNTotW;
if (false == InclTran) 
wDTranDiat = 0.0 
else
wDTranDiat = uDLoadDiat / sDepthW - wDDilDiat 
end;
if (false == InclTran) 
wPTranDiat = 0.0 
else
wPTranDiat = uPLoadDiat / sDepthW - wPDilDiat 
end;
if (false == InclTran) 
wNTranDiat = 0.0 
else
wNTranDiat = uNLoadDiat / sDepthW - wNDilDiat 
end;
if (false == InclTran) 
wDTranGren = 0.0 
else
wDTranGren = uDLoadGren / sDepthW - wDDilGren 
end;
if (false == InclTran) 
wPTranGren = 0.0 
else
wPTranGren = uPLoadGren / sDepthW - wPDilGren 
end;
if (false == InclTran) 
wNTranGren = 0.0 
else
wNTranGren = uNLoadGren / sDepthW - wNDilGren 
end;
if (false == InclTran) 
wDTranBlue = 0.0 
else
wDTranBlue = uDLoadBlue / sDepthW - wDDilBlue 
end;
if (false == InclTran) 
wPTranBlue = 0.0 
else
wPTranBlue = uPLoadBlue / sDepthW - wPDilBlue 
end;
if (false == InclTran) 
wNTranBlue = 0.0 
else
wNTranBlue = uNLoadBlue / sDepthW - wNDilBlue 
end;
if (false == InclTran) 
wDTranPhyt = 0.0 
else
wDTranPhyt = wDTranDiat + wDTranGren + wDTranBlue 
end;
if (false == InclTran) 
wPTranPhyt = 0.0 
else
wPTranPhyt = wPTranDiat + wPTranGren + wPTranBlue 
end;
if (false == InclTran) 
wNTranPhyt = 0.0 
else
wNTranPhyt = wNTranDiat + wNTranGren + wNTranBlue 
end;
uSiLoadSiO2 = cSiO2In * uQIn / mmPerm;
uSiLoadDet = cSiDDetIn * uDLoadDet;
uSiLoadDiat = cSiDDiat * uDLoadDiat;
uSiLoad = uSiLoadSiO2 + uSiLoadDet + uSiLoadDiat;
wSiDilSiO2 = ukDil * sSiO2W;
wSiDilDet = ukDil * sSiDetW;
wSiDilDiat = cSiDDiat * wDDilDiat;
wSiOutflTot = ukOut * (sSiO2W + sSiDetW + cSiDDiat * sDDiatW);
if (false == InclTran) 
wSiTranSiO2 = 0.0 
else
wSiTranSiO2 = uSiLoadSiO2 / sDepthW - wSiDilSiO2 
end;
if (false == InclTran) 
wSiTranDetW = 0.0 
else
wSiTranDetW = uSiLoadDet / sDepthW - wSiDilDet 
end;
if (false == InclTran) 
tSiTranTotT = 0.0 
else
tSiTranTotT = uSiLoadSiO2 + uSiLoadDet + uSiLoadDiat - (wSiDilDet + wSiDilSiO2 + wSiDilDiat) * sDepthW 
end;
if (false == InclTran) 
wDTranZoo = 0.0 
else
wDTranZoo =( ukDilWat * cDZooIn - ukDil*sDZoo) 
end;
if (false == InclTran) 
wPTranZoo = 0.0 
else
wPTranZoo =(ukDilWat * cPDZooRef*cDZooIn - ukDil*sPZoo) 
end;
if (false == InclTran) 
wNTranZoo = 0.0 
else
wNTranZoo =(ukDilWat * cNDZooRef*cDZooIn - ukDil * sNZoo) 
end;
if (false == InclTran) 
wDTranIMW = 0.0 
else
wDTranIMW = uDLoadIM / sDepthW - wDDilIM 
end;
if (false == InclTran) 
wDTranDetW = 0.0 
else
wDTranDetW = uDLoadDet / sDepthW - wDDilDet 
end;
if (false == InclTran) 
wO2TranW = 0.0 
else
wO2TranW = wO2Inflow - wO2Outfl 
end;
if (false == InclTran) 
wPTranPO4W = 0.0 
else
wPTranPO4W = uPLoadPO4 / sDepthW - wPDilPO4 
end;
if (false == InclTran) 
wPTranAIMW = 0.0 
else
wPTranAIMW = uPLoadAIM / sDepthW - wPDilAIM 
end;
if (false == InclTran) 
wPTranDetW = 0.0 
else
wPTranDetW = uPLoadDet / sDepthW - wPDilDet 
end;
if (false == InclTran) 
wNTranNH4W = 0.0 
else
wNTranNH4W = uNLoadNH4 / sDepthW - wNDilNH4 
end;
if (false == InclTran) 
wNTranNO3W = 0.0 
else
wNTranNO3W = uNLoadNO3 / sDepthW - wNDilNO3 
end;
if (false == InclTran) 
wNTranDetW = 0.0 
else
wNTranDetW = uNLoadDet / sDepthW - wNDilDet 
end;
wDDilTot = wDDilIM + wDDilDet + wDDilPhyt;
wPDilTot = wPDilDet + wPDilPO4 + wPDilAIM + wPDilPhyt;
wNDilTot = wNDilDet + wNDilNO3 + wNDilNH4 + wNDilPhyt;
wSiDilTot = wSiDilDet + wSiDilSiO2 + wSiDilDiat;
if (false == InclTran) 
tDTranTotT = 0.0 
else
tDTranTotT = uDLoad - wDDilTot * sDepthW 
end;
if (false == InclTran) 
tPTranTotT = 0.0 
else
tPTranTotT = uPLoad - wPDilTot * sDepthW 
end;
if (false == InclTran) 
tNTranTotT = 0.0 
else
tNTranTotT = uNLoad - wNDilTot * sDepthW 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wDExchIMM = akExchM *(sDIMW - sDIMWM) 
else
wDExchIMM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wPExchPO4M = akExchM *(sPO4W - sPO4WM) 
else
wPExchPO4M = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wPExchAIMM = akExchM *(sPAIMW - sPAIMWM) 
else
wPExchAIMM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wNExchNH4M = akExchM *(sNH4W - sNH4WM) 
else
wNExchNH4M = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wNExchNO3M = akExchM *(sNO3W - sNO3WM) 
else
wNExchNO3M = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wSiExchSiO2M = akExchM *(sSiO2W - sSiO2WM) 
else
wSiExchSiO2M = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wO2ExchM = akExchM *(sO2W - sO2WM) 
else
wO2ExchM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wDExchDetM = akExchM *(sDDetW - sDDetWM) 
else
wDExchDetM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wPExchDetM = akExchM *(sPDetW - sPDetWM) 
else
wPExchDetM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wNExchDetM = akExchM *(sNDetW - sNDetWM) 
else
wNExchDetM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wSiExchDetM = akExchM *(sSiDetW - sSiDetWM) 
else
wSiExchDetM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wDExchDiatM = akExchM *(sDDiatW - sDDiatWM) 
else
wDExchDiatM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wPExchDiatM = akExchM *(sPDiatW - sPDiatWM) 
else
wPExchDiatM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wNExchDiatM = akExchM *(sNDiatW - sNDiatWM) 
else
wNExchDiatM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wSiExchDiatM = cSiDDiat * wDExchDiatM 
else
wSiExchDiatM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wDExchGrenM = akExchM *(sDGrenW - sDGrenWM) 
else
wDExchGrenM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wPExchGrenM = akExchM *(sPGrenW - sPGrenWM) 
else
wPExchGrenM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wNExchGrenM = akExchM *(sNGrenW - sNGrenWM) 
else
wNExchGrenM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wDExchBlueM = akExchM *(sDBlueW - sDBlueWM) 
else
wDExchBlueM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wPExchBlueM = akExchM *(sPBlueW - sPBlueWM) 
else
wPExchBlueM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wNExchBlueM = akExchM *(sNBlueW - sNBlueWM) 
else
wNExchBlueM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wDExchZooM = akExchM *(sDZoo - sDZooM) 
else
wDExchZooM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wPExchZooM = akExchM *(sPZoo - sPZooM) 
else
wPExchZooM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wNExchZooM = akExchM *(sNZoo - sNZooM) 
else
wNExchZooM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wDExchIM = akExchL *(sDIMW - sDIMWM) 
else
wDExchIM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wPExchPO4 = akExchL *(sPO4W - sPO4WM) 
else
wPExchPO4 = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wPExchAIM = akExchL *(sPAIMW - sPAIMWM) 
else
wPExchAIM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wNExchNH4 = akExchL *(sNH4W - sNH4WM) 
else
wNExchNH4 = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wNExchNO3 = akExchL *(sNO3W - sNO3WM) 
else
wNExchNO3 = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wSiExchSiO2 = akExchL *(sSiO2W - sSiO2WM) 
else
wSiExchSiO2 = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wO2Exch = akExchL *(sO2W - sO2WM) 
else
wO2Exch = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wDExchDet = akExchL *(sDDetW - sDDetWM) 
else
wDExchDet = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wPExchDet = akExchL *(sPDetW - sPDetWM) 
else
wPExchDet = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wNExchDet = akExchL *(sNDetW - sNDetWM) 
else
wNExchDet = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wSiExchDet = akExchL *(sSiDetW - sSiDetWM) 
else
wSiExchDet = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wDExchDiat = akExchL *(sDDiatW - sDDiatWM) 
else
wDExchDiat = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wPExchDiat = akExchL *(sPDiatW - sPDiatWM) 
else
wPExchDiat = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wNExchDiat = akExchL *(sNDiatW - sNDiatWM) 
else
wNExchDiat = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wSiExchDiat = cSiDDiat * wDExchDiat 
else
wSiExchDiat = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wDExchGren = akExchL *(sDGrenW - sDGrenWM) 
else
wDExchGren = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wPExchGren = akExchL *(sPGrenW - sPGrenWM) 
else
wPExchGren = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wNExchGren = akExchL *(sNGrenW - sNGrenWM) 
else
wNExchGren = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wDExchBlue = akExchL *(sDBlueW - sDBlueWM) 
else
wDExchBlue = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wPExchBlue = akExchL *(sPBlueW - sPBlueWM) 
else
wPExchBlue = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wNExchBlue = akExchL *(sNBlueW - sNBlueWM) 
else
wNExchBlue = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wDExchZoo = akExchL *(sDZoo - sDZooM) 
else
wDExchZoo = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wPExchZoo = akExchL *(sPZoo - sPZooM) 
else
wPExchZoo = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wNExchZoo = akExchL *(sNZoo - sNZooM) 
else
wNExchZoo = 0.0 
end;
if (cQInf >= 0.0) 
tPInfPO4W = cQInf / mmPerm * sPO4W 
else
tPInfPO4W = cQInf / mmPerm * oPO4S 
end;
if (cQInf >= 0.0) 
tNInfNH4W = cQInf / mmPerm * sNH4W 
else
tNInfNH4W = cQInf / mmPerm * oNH4S 
end;
if (cQInf >= 0.0) 
tNInfNO3W = cQInf / mmPerm * sNO3W 
else
tNInfNO3W = cQInf / mmPerm * oNO3S 
end;
if (cQInf >= 0.0) 
tPInfPO4S = cQInf / mmPerm * oPO4S 
else
tPInfPO4S = cQInf / mmPerm * cPO4Ground 
end;
if (cQInf >= 0.0) 
tNInfNH4S = cQInf / mmPerm * oNH4S 
else
tNInfNH4S = cQInf / mmPerm * cNH4Ground 
end;
if (cQInf >= 0.0) 
tNInfNO3S = cQInf / mmPerm * oNO3S 
else
tNInfNO3S = cQInf / mmPerm * cNO3Ground  
end;
tNH4LoadS = fNH4LoadS * cNLoadS;
tNO3LoadS = cNLoadS - tNH4LoadS;
uDErosIM = (1.0 - fDOrgSoil) * cDErosTot;
uDErosIMS = fSedErosIM * uDErosIM;
uDErosIMW = uDErosIM - uDErosIMS;
uDErosOM = fDOrgSoil * cDErosTot;
uPErosOM = cPDSoilOM * uDErosOM;
uNErosOM = cNDSoilOM * uDErosOM;
uO2Sat = 14.652 - 0.41022 * uTm + 0.007991 * uTm*uTm - 0.000077774 * uTm*uTm*uTm;
kAer = cAerRoot * ((uVWind )^ (0.5)) + cAerLin * uVWind + cAerSquare * uVWind*uVWind;
uFunTmAer = ((cThetaAer )^ (uTm-cTmRef));
aFunLemnAer = 1.0;
tO2Aer = kAer * uFunTmAer * (uO2Sat - sO2W) * aFunLemnAer;
if (InclWeb == true) 
uFunTmFish = exp( -0.5/(cSigTmFish*cSigTmFish) * ((uTm - cTmOptFish)*(uTm - cTmOptFish) - (cTmRef - cTmOptFish)*(cTmRef - cTmOptFish))) 
else
uFunTmFish = 0.0 
end;
if (InclWeb == true) 
tDTurbFish = (kTurbFish * uFunTmFish * sDFiAd) 
else
tDTurbFish = 0.0 
end;
tDTurbFishIM = fLutum * sDIMS / (fLutum * sDIMS + sDDetS) * tDTurbFish;
aFunVegResus = max(1.0 - kVegResus * sDVeg, 0.0);
if (uTm >= 0.1) 
aFunDimSusp = cSuspRef * ((cSuspMin + cSuspMax / (1.0 + exp(cSuspSlope * (sDepthW - hDepthSusp)))) * ((((cFetch +NearZero)/ cFetchRef) )^ (0.5))) 
else
aFunDimSusp = 0.0 
end;
tDResusTauDead = min(aFunDimSusp, ((aFunDimSusp +NearZero )^ (0.5))) * ((fLutum / fLutumRef )^ (0.5)) * bPorS;
tDResusBareDead = tDResusTauDead + tDTurbFish;
tDResusDead = tDResusBareDead * aFunVegResus;
tDResusIM = fLutum * sDIMS / (fLutum * sDIMS + sDDetS) * tDResusDead;
tDResusDet = sDDetS / (fLutum * sDIMS + sDDetS) * tDResusDead;
akResusPhytRef = kResusPhytMax * (1.0 - exp(cResusPhytExp * tDResusDead));
tDResusPhytTot = akResusPhytRef * aDPhytS;
tPResusDet = rPDDetS * tDResusDet;
tPResusPO4 = sPO4S / sDDetS * tDResusDet;
tPResusAIM = sPAIMS / sDIMS * tDResusIM;
tNResusNO3 = sNO3S / sDDetS * tDResusDet;
tNResusNH4 = sNH4S / sDDetS * tDResusDet;
tNResusDet = rNDDetS * tDResusDet;
tSiResusDet = rSiDDetS * tDResusDet;
aFunTauSetOM = min(1.0 / ((aFunDimSusp +NearZero )^ (0.5)), 1.0);
aFunTauSetIM = aFunTauSetOM;
uFunTmSet = ((cThetaSet )^ (uTm-cTmRef));
uCorVSetIM = aFunTauSetIM * (((fLutumRef/fLutum) )^ (0.5)) * uFunTmSet * cVSetIM;
tDSetIM = uCorVSetIM * sDIMW;
tPSetAIM = sPAIMW / sDIMW * tDSetIM;
uCorVSetDet = cVSetDet * aFunTauSetOM * uFunTmSet;
tDSetDet = uCorVSetDet * sDDetW;
tPSetDet = uCorVSetDet * sPDetW;
tNSetDet = uCorVSetDet * sNDetW;
tSiSetDet = uCorVSetDet * sSiDetW;
kPMinDetW = kDMinDetW;
kNMinDetW = kDMinDetW;
kSiMinDetW = kDMinDetW;
uFunTmMinW = ((cThetaMinW )^ (uTm-cTmRef));
wDMinDetW = kDMinDetW * uFunTmMinW * sDDetW;
wPMinDetW = kPMinDetW * uFunTmMinW * sPDetW;
wNMinDetW = kNMinDetW * uFunTmMinW * sNDetW;
wSiMinDetW = kSiMinDetW * uFunTmMinW * sSiDetW;
aCorO2BOD = sO2W / (hO2BOD + sO2W);
wO2MinDetW = molO2molC * cCPerDW * aCorO2BOD * wDMinDetW;
wDDenitW = sNO3W*sNO3W / (hNO3Denit*hNO3Denit + sNO3W*sNO3W) * (1.0 - aCorO2BOD) * wDMinDetW;
wNDenitW = NO3PerC * molNmolC * cCPerDW * wDDenitW;
uFunTmNitr = ((cThetaNitr )^ (uTm-cTmRef));
aCorO2NitrW = sO2W*sO2W / (hO2Nitr*hO2Nitr + sO2W*sO2W);
wNNitrW = kNitrW * uFunTmNitr * aCorO2NitrW * sNH4W;
wO2NitrW = O2PerNH4 * molO2molN * wNNitrW;
kPMinDetS = kDMinDetS;
kNMinDetS = kDMinDetS;
kSiMinDetS = kDMinDetS;
uFunTmMinS = ((cThetaMinS )^ (uTm-cTmRef));
tDMinDetS = kDMinDetS * uFunTmMinS * sDDetS;
tPMinDetS = kPMinDetS * uFunTmMinS * sPDetS;
tNMinDetS = kNMinDetS * uFunTmMinS * sNDetS;
tSiMinDetS = kSiMinDetS * uFunTmMinS * sSiDetS;
uFunTmDif = ((cThetaDif )^ (uTm-cTmRef));
akO2DifCor = kO2Dif * uFunTmDif * cTurbDifO2 * bPorCorS;
tSOD = (molO2molC * cCPerDW * (1.0 - fRefrDetS) * tDMinDetS + O2PerNH4 * molO2molN * kNitrS * uFunTmNitr * sNH4S) / cDepthS;
aDepthOxySed = (((2.0 * sO2W * akO2DifCor / tSOD) )^ (0.5));
afOxySed = aDepthOxySed / cDepthS;
tDMinOxyDetS = afOxySed * (1.0 - fRefrDetS) * tDMinDetS;
tO2MinDetS = molO2molC * cCPerDW * tDMinOxyDetS;
tDDenitS = oNO3S*oNO3S / (hNO3Denit*hNO3Denit + oNO3S*oNO3S) * (1.0 - afOxySed) * (1.0 - fRefrDetS) * tDMinDetS;
tNDenitS = NO3PerC * molNmolC * cCPerDW * tDDenitS;
tNNitrS = afOxySed * kNitrS * uFunTmNitr * sNH4S;
tO2NitrS = O2PerNH4 * molO2molN * tNNitrS;
tDMinHumS = kDMinHum * uFunTmMinS * afOxySed * sDHumS;
tPMinHumS = kDMinHum * uFunTmMinS * afOxySed * sPHumS;
tNMinHumS = kDMinHum * uFunTmMinS * afOxySed * sNHumS;
aDepthDif = fDepthDifS * cDepthS;
tPDifPO4 = kPDifPO4 * uFunTmDif * cTurbDifNut * bPorCorS * (oPO4S - sPO4W ) / aDepthDif;
tNDifNO3 = kNDifNO3 * uFunTmDif * cTurbDifNut * bPorCorS * (oNO3S - sNO3W ) / aDepthDif;
tNDifNH4 = kNDifNH4 * uFunTmDif * cTurbDifNut * bPorCorS * (oNH4S - sNH4W ) / aDepthDif;
tO2Dif = kO2Dif / aDepthDif * uFunTmDif * cTurbDifO2 * bPorCorS * sO2W;
tPDifGroundPO4 = 0.0;
tNDifGroundNO3 = 0.0;
tNDifGroundNH4 = 0.0;
aPAdsMaxW = cRelPAdsD + aCorO2BOD * cRelPAdsFe * fFeDIM + cRelPAdsAl * fAlDIM;
aKPAdsW = (1.0 - fRedMax * (1.0-aCorO2BOD)) * cKPAdsOx;
aPIsoAdsW = aPAdsMaxW * aKPAdsW * sPO4W / (1.0 + aKPAdsW * sPO4W);
aPEqIMW = aPIsoAdsW * sDIMW;
wPSorpIMW = kPSorp * (aPEqIMW - sPAIMW);
aPAdsMaxS = cRelPAdsD + afOxySed * cRelPAdsFe * fFeDIM + cRelPAdsAl * fAlDIM;
aKPAdsS = (1.0 - fRedMax * (1.0-afOxySed)) * cKPAdsOx;
aPIsoAdsS = aPAdsMaxS * aKPAdsS * oPO4S / (1.0 + aKPAdsS * oPO4S);
aPEqIMS = aPIsoAdsS * sDIMS;
tPSorpIMS = kPSorp * (aPEqIMS - sPAIMS);
tPChemPO4 = max( 0.0, kPChemPO4 * (oPO4S - coPO4Max) );
wDAbioIMW = (uDErosIMW - tDSetIM + tDResusIM) / sDepthW;
wDAbioDetW = (- tDSetDet + tDResusDet ) / sDepthW - wDMinDetW;
tDAbioIMS = uDErosIMS + tDSetIM - tDResusIM;
tDAbioDetS = tDSetDet - tDResusDet - tDMinDetS;
tDAbioHumS = uDErosOM + fRefrDetS * tDMinDetS - tDMinHumS;
tDAbioTotT = cDErosTot - wDMinDetW * sDepthW - (1.0 - fRefrDetS) * tDMinDetS - tDMinHumS;
wO2AbioW = tO2Aer / sDepthW - wO2MinDetW - wO2NitrW - (tO2MinDetS + tO2NitrS) / sDepthW;
wPAbioDetW = - wPMinDetW - (tPSetDet - tPResusDet) / sDepthW;
wPAbioPO4W = wPMinDetW - wPSorpIMW - tPInfPO4W / sDepthW + tPDifPO4 / sDepthW + tPResusPO4 / sDepthW;
wPAbioAIMW = (- tPSetAIM + tPResusAIM) / sDepthW + wPSorpIMW;
tPAbioDetS = - tPMinDetS + tPSetDet - tPResusDet;
tPAbioHumS = uPErosOM + fRefrDetS * tPMinDetS - tPMinHumS;
tPAbioPO4S = tPInfPO4W - tPInfPO4S + (1.0-fRefrDetS) * tPMinDetS + tPMinHumS - tPSorpIMS - tPResusPO4 - tPDifPO4 - tPDifGroundPO4 - tPChemPO4;
tPAbioAIMS = tPSetAIM - tPResusAIM + tPSorpIMS;
tPAbioTotT = uPErosOM - tPChemPO4 - tPInfPO4S - tPDifGroundPO4;
wNAbioNH4W = wNMinDetW - wNNitrW - tNInfNH4W / sDepthW + (tNDifNH4 + tNResusNH4) / sDepthW;
wNAbioNO3W = wNNitrW - wNDenitW + (tNDifNO3 + tNResusNO3 - tNInfNO3W) / sDepthW;
wNAbioDetW = - wNMinDetW - (tNSetDet - tNResusDet ) / sDepthW;
tNAbioNH4S = tNInfNH4W - tNInfNH4S + (1.0-fRefrDetS) * tNMinDetS + tNMinHumS - tNResusNH4 - tNDifNH4 - tNDifGroundNH4 - tNNitrS;
tNAbioNO3S = tNInfNO3W - tNInfNO3S + tNNitrS - tNDenitS - tNResusNO3 - tNDifNO3 - tNDifGroundNO3;
tNAbioDetS = - tNMinDetS + tNSetDet - tNResusDet;
tNAbioHumS = uNErosOM + fRefrDetS * tNMinDetS - tNMinHumS;
tNAbioTotT = uNErosOM - tNDenitS - wNDenitW * sDepthW - tNInfNH4S - tNInfNO3S - tNDifGroundNO3 - tNDifGroundNH4;
wSiAbioSiO2W = wSiMinDetW + (1.0 - fRefrDetS) * tSiMinDetS / sDepthW;
wSiAbioDetW = - wSiMinDetW - (tSiSetDet - tSiResusDet) / sDepthW;
tSiAbioDetS = - tSiMinDetS + tSiSetDet - tSiResusDet;
tSiAbioTotT = - fRefrDetS * tSiMinDetS;
if (InclMarsh == true && fMarsh > NearZero) 
uQEvPhra = uQEv 
else
uQEvPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tPEvPO4WM = uQEvPhra / mmPerm * sPO4WM 
else
tPEvPO4WM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tNEvNH4WM = uQEvPhra / mmPerm * sNH4WM 
else
tNEvNH4WM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tNEvNO3WM = uQEvPhra / mmPerm * sNO3WM 
else
tNEvNO3WM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tPInfPO4WM = 0.0 
elseif (cQInf >= 0.0) 
tPInfPO4WM = cQInf / mmPerm * sPO4WM 
else
tPInfPO4WM = cQInf / mmPerm * oPO4SM 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tNInfNH4WM = 0.0 
elseif (cQInf >= 0.0) 
tNInfNH4WM = cQInf / mmPerm * sNH4WM 
else
tNInfNH4WM = cQInf / mmPerm * oNH4SM 
end;
if (false == InclMarsh || fMarsh <= NearZero) 
tNInfNO3WM = 0.0 
elseif (cQInf >= 0.0) 
tNInfNO3WM = cQInf / mmPerm * sNO3WM 
else
tNInfNO3WM = cQInf / mmPerm * oNO3SM 
end;
if (false == InclMarsh || fMarsh <= NearZero) 
tPInfPO4SM = 0.0 
elseif (cQInf >= 0.0) 
tPInfPO4SM = cQInf / mmPerm * oPO4SM 
else
tPInfPO4SM = cQInf / mmPerm * cPO4Ground 
end;
if (false == InclMarsh || fMarsh <= NearZero) 
tNInfNH4SM = 0.0 
elseif (cQInf >= 0.0) 
tNInfNH4SM = cQInf / mmPerm * oNH4SM 
else
tNInfNH4SM = cQInf / mmPerm * oNH4SM 
end;
if (false == InclMarsh || fMarsh <= NearZero) 
tNInfNO3SM = 0.0 
elseif (cQInf >= 0.0) 
tNInfNO3SM = cQInf / mmPerm * oNO3SM 
else
tNInfNO3SM = cQInf / mmPerm * oNO3SM 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tO2AerM = kAer * uFunTmAer *(uO2Sat - sO2WM) 
else
tO2AerM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tDSetIMM = cVSetIM * uFunTmSet * sDIMWM 
else
tDSetIMM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tPSetAIMM = cVSetIM * uFunTmSet * sPAIMWM 
else
tPSetAIMM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tDSetDetM = cVSetDet * uFunTmSet * sDDetWM 
else
tDSetDetM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tPSetDetM = cVSetDet * uFunTmSet* sPDetWM 
else
tPSetDetM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tNSetDetM = cVSetDet * uFunTmSet* sNDetWM 
else
tNSetDetM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tSiSetDetM = cVSetDet * uFunTmSet * sSiDetWM 
else
tSiSetDetM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tDSetDiatM = cVSetDiat * uFunTmSet * sDDiatWM 
else
tDSetDiatM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tPSetDiatM = cVSetDiat * uFunTmSet* sPDiatWM 
else
tPSetDiatM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tNSetDiatM = cVSetDiat * uFunTmSet* sNDiatWM 
else
tNSetDiatM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tSiSetDiatM = cVSetDiat * uFunTmSet * oSiDiatWM 
else
tSiSetDiatM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tDSetGrenM = cVSetGren * uFunTmSet * sDGrenWM 
else
tDSetGrenM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tPSetGrenM = cVSetGren * uFunTmSet* sPGrenWM 
else
tPSetGrenM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tNSetGrenM = cVSetGren * uFunTmSet* sNGrenWM 
else
tNSetGrenM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tDSetBlueM = cVSetBlue * uFunTmSet * sDBlueWM 
else
tDSetBlueM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tPSetBlueM = cVSetBlue * uFunTmSet* sPBlueWM 
else
tPSetBlueM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tNSetBlueM = cVSetBlue * uFunTmSet* sNBlueWM 
else
tNSetBlueM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tDSetPhytM = tDSetDiatM + tDSetGrenM + tDSetBlueM 
else
tDSetPhytM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tPSetPhytM = tPSetDiatM + tPSetGrenM + tPSetBlueM 
else
tPSetPhytM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tNSetPhytM = tNSetDiatM + tNSetGrenM + tNSetBlueM 
else
tNSetPhytM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tDSetTotM = tDSetIMM + tDSetDetM + tDSetPhytM 
else
tDSetTotM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wDMinDetWM = kDMinDetW * uFunTmMinW * sDDetWM 
else
wDMinDetWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wPMinDetWM = kPMinDetW * uFunTmMinW * sPDetWM 
else
wPMinDetWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wNMinDetWM = kNMinDetW * uFunTmMinW * sNDetWM 
else
wNMinDetWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wSiMinDetWM = kSiMinDetW * uFunTmMinW * sSiDetWM 
else
wSiMinDetWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aCorO2BODM = sO2WM /(hO2BOD + sO2WM) 
else
aCorO2BODM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wO2MinDetWM = molO2molC * cCPerDW * aCorO2BODM * wDMinDetWM 
else
wO2MinDetWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wDDenitWM = sNO3WM*sNO3WM /(hNO3Denit*hNO3Denit + sNO3WM*sNO3WM) *(1.0 - aCorO2BODM) * wDMinDetWM 
else
wDDenitWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wNDenitWM = NO3PerC * molNmolC * cCPerDW * wDDenitWM 
else
wNDenitWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aCorO2NitrWM = sO2WM * sO2WM /(hO2Nitr * hO2Nitr + sO2WM * sO2WM) 
else
aCorO2NitrWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wNNitrWM = kNitrW * uFunTmNitr * aCorO2NitrWM * sNH4WM 
else
wNNitrWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wO2NitrWM = O2PerNH4 * molO2molN * wNNitrWM 
else
wO2NitrWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tDMinDetSM = kDMinDetS * uFunTmMinS * sDDetSM 
else
tDMinDetSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tPMinDetSM = kPMinDetS * uFunTmMinS * sPDetSM 
else
tPMinDetSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tNMinDetSM = kNMinDetS * uFunTmMinS * sNDetSM 
else
tNMinDetSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tSiMinDetSM = kSiMinDetS * uFunTmMinS * sSiDetSM 
else
tSiMinDetSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
akO2DifCorM = kO2Dif * uFunTmDif * cTurbDifO2 * bPorCorSM 
else
akO2DifCorM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tSODM =(molO2molC * cCPerDW *(1.0 - fRefrDetS) * tDMinDetSM + O2PerNH4 * molO2molN * kNitrS * uFunTmNitr * sNH4SM) / cDepthSM 
else
tSODM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aDepthOxySedM = (((2.0 * sO2WM * akO2DifCorM / tSODM) )^ (0.5)) 
else
aDepthOxySedM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
afOxySedM = aDepthOxySedM / cDepthSM 
else
afOxySedM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tDMinOxyDetSM = afOxySedM *(1.0 - fRefrDetS) * tDMinDetSM 
else
tDMinOxyDetSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tO2MinDetSM = molO2molC * cCPerDW * tDMinOxyDetSM 
else
tO2MinDetSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tDDenitSM = oNO3SM*oNO3SM /(hNO3Denit*hNO3Denit + oNO3SM*oNO3SM) *(1.0 - afOxySedM) *(1.0 - fRefrDetS) * tDMinDetSM 
else
tDDenitSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tNDenitSM = NO3PerC * molNmolC * cCPerDW * tDDenitSM 
else
tNDenitSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tNNitrSM = afOxySedM * kNitrS * uFunTmNitr * sNH4SM 
else
tNNitrSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tO2NitrSM = O2PerNH4 * molO2molN * tNNitrSM 
else
tO2NitrSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tDMinHumSM = kDMinHum * uFunTmMinS * afOxySedM * sDHumSM 
else
tDMinHumSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tPMinHumSM = kDMinHum * uFunTmMinS * afOxySedM * sPHumSM 
else
tPMinHumSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tNMinHumSM = kDMinHum * uFunTmMinS * afOxySedM * sNHumSM 
else
tNMinHumSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aDepthDifM = fDepthDifS * cDepthSM 
else
aDepthDifM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tPDifPO4M = kPDifPO4 * uFunTmDif * cTurbDifNut * bPorCorSM * (oPO4SM - sPO4WM) / aDepthDifM 
else
tPDifPO4M = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tNDifNO3M = kNDifNO3 * uFunTmDif * cTurbDifNut * bPorCorSM * (oNO3SM - sNO3WM) / aDepthDifM 
else
tNDifNO3M = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tNDifNH4M = kNDifNH4 * uFunTmDif * cTurbDifNut * bPorCorSM * (oNH4SM - sNH4WM) / aDepthDifM 
else
tNDifNH4M = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tO2DifM = kO2Dif / aDepthDifM * uFunTmDif * cTurbDifO2 * bPorCorSM * sO2WM 
else
tO2DifM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tPDifGroundPO4M = 0.0 
else
tPDifGroundPO4M = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tNDifGroundNO3M = 0.0 
else
tNDifGroundNO3M = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tNDifGroundNH4M = 0.0 
else
tNDifGroundNH4M = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aPAdsMaxWM = cRelPAdsD + aCorO2BODM * cRelPAdsFe * fFeDIM + cRelPAdsAl * fAlDIM 
else
aPAdsMaxWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aKPAdsWM =(1.0 - fRedMax *(1.0-aCorO2BODM)) * cKPAdsOx 
else
aKPAdsWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aPIsoAdsWM = aPAdsMaxWM * aKPAdsWM * sPO4WM /(1.0 + aKPAdsWM * sPO4WM) 
else
aPIsoAdsWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aPEqIMWM = aPIsoAdsWM * sDIMWM 
else
aPEqIMWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
wPSorpIMWM = kPSorp *(aPEqIMWM - sPAIMWM) 
else
wPSorpIMWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aPAdsMaxSM = cRelPAdsD + afOxySedM * cRelPAdsFe * fFeDIM + cRelPAdsAl * fAlDIM 
else
aPAdsMaxSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aKPAdsSM =(1.0 - fRedMax *(1.0-afOxySedM)) * cKPAdsOx 
else
aKPAdsSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aPIsoAdsSM = aPAdsMaxSM * aKPAdsSM * oPO4SM /(1.0 + aKPAdsSM * oPO4SM) 
else
aPIsoAdsSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aPEqIMSM = aPIsoAdsSM * sDIMSM 
else
aPEqIMSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tPSorpIMSM = kPSorp *(aPEqIMSM - sPAIMSM) 
else
tPSorpIMSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tPChemPO4M = max(0.0,kPChemPO4 *(oPO4SM - coPO4Max)) 
else
tPChemPO4M = 0.0 
end;
if (Day < 1.0 || sTime < BeginTime + 1.0) 
aDayInitVeg = 367 
elseif (uTm >= cTmInitVeg && aDayInitVeg > 366) 
aDayInitVeg = Day 
else
aDayInitVeg = aDayInitVeg 
end;
if (false == InclSeason) 
bfRootVeg = fRootVegSum 
elseif (Day < aDayInitVeg) 
bfRootVeg = fRootVegWin 
elseif (Day < aDayInitVeg + cLengAllo) 
bfRootVeg = 0.5*(fRootVegWin + fRootVegSum) + 0.5*(fRootVegWin - fRootVegSum) * cos(Pi/cLengAllo * (Day - aDayInitVeg)) 
elseif (Day < cDayWinVeg) 
bfRootVeg = fRootVegSum 
elseif (Day < cDayWinVeg + cLengAllo) 
bfRootVeg = 0.5*(fRootVegWin + fRootVegSum) - 0.5*(fRootVegWin - fRootVegSum) * cos(Pi/cLengAllo * (Day - cDayWinVeg)) 
else
bfRootVeg = fRootVegWin 
end;
bfShootVeg = 1.0 - bfRootVeg;
aDRootVeg = bfRootVeg * sDVeg;
aDShootVeg = bfShootVeg * sDVeg;
aDEmergVeg = fEmergVeg * aDShootVeg;
aDFloatVeg = fFloatVeg * aDShootVeg;
bfSubVeg = 1.0 - fFloatVeg - fEmergVeg;
aDSubVeg = bfSubVeg * aDShootVeg;
if (false == InclBed) 
aExtVeg = 0.0 
else
aExtVeg = cExtSpVeg * aDSubVeg / sDepthW 
end;
aDepth1Veg = fDepth1Veg * sDepthW;
aDepth2Veg = fDepth2Veg * sDepthW;
if (false == InclBed) 
afCovSurfVeg = 0.0 
else
afCovSurfVeg = min(1.0, max(aDFloatVeg / (cDLayerVeg + NearZero), aDEmergVeg / (fEmergVeg * cDCarrVeg + NearZero) ) ) 
end;
afCovEmergVeg = min(1.0, PerCent * cCovSpVeg * aDEmergVeg);
aCovVeg = min(100.0, cCovSpVeg * aDShootVeg);
aDVeg = sDVeg;
aPVeg = sPVeg;
aNVeg = sNVeg;
aExtCoef = aExtCoefOpen + aExtVeg;
aLPARBot = uLPARSurf * exp(- aExtCoef * sDepthW);
rPDVeg = sPVeg / (sDVeg+NearZero);
rNDVeg = sNVeg / (sDVeg+NearZero);
tDMigrVeg = kMigrVeg * (cDVegIn - sDVeg);
tPMigrVeg = kMigrVeg * (cPDVeg0* cDVegIn - sPVeg);
tNMigrVeg = kMigrVeg * (cNDVeg0* cDVegIn - sNVeg);
uFunTmProdVeg = ((cQ10ProdVeg )^ (0.1 * (uTm - cTmRef)));
uFunTmRespVeg = ((cQ10RespVeg )^ (0.1 * (uTm - cTmRef)));
if (false == UseEmpUpt) 
afPUptVegS = 0.0 
elseif (bfRootVeg <= NearZero) 
afPUptVegS = 0.0 
elseif (fFloatVeg + bfSubVeg <= NearZero) 
afPUptVegS = 1.0 
else
afPUptVegS = fSedUptVegMax / (1.0 + fSedUptVegCoef * ((((oPO4S+NearZero) / (sPO4W+NearZero)) )^ fSedUptVegExp)) 
end;
if (false == UseEmpUpt) 
afNUptVegS = 0.0 
elseif (bfRootVeg <= NearZero) 
afNUptVegS = 0.0 
elseif (fFloatVeg + bfSubVeg <= NearZero) 
afNUptVegS = 1.0 
else
afNUptVegS = fSedUptVegMax / (1.0 + fSedUptVegCoef * ((((oNDissS+NearZero) / (oNDissW+NearZero)) )^ fSedUptVegExp)) 
end;
if (false == UseEmpUpt) 
aVPUptMaxCrVeg = max( 0.0, cVPUptMaxVeg * uFunTmProdVeg * (cPDVegMax-rPDVeg) / (cPDVegMax-cPDVegMin) ) 
else
aVPUptMaxCrVeg = max( 0.0, cVPUptMaxVeg * uFunTmProdVeg * (cPDVegMax-rPDVeg) / (cPDVegMax-cPDVegMin) ) 
end;
if (false == UseEmpUpt) 
aVPUptVegW = sPO4W * aVPUptMaxCrVeg / (aVPUptMaxCrVeg / cAffPUptVeg + sPO4W) 
else
aVPUptVegW = 0.0 
end;
if (false == UseEmpUpt) 
aVPUptVegS = oPO4S * aVPUptMaxCrVeg / (aVPUptMaxCrVeg / cAffPUptVeg + oPO4S) 
else
aVPUptVegS = 0.0 
end;
if (false == UseEmpUpt) 
tPUptVegW = aVPUptVegW * (aDSubVeg + aDFloatVeg) 
else
tPUptVegW = (1.0 - afPUptVegS) * aVPUptMaxCrVeg * sPO4W / (aVPUptMaxCrVeg / cAffPUptVeg + sPO4W) * sDVeg 
end;
if (false == UseEmpUpt) 
tPUptVegS = aVPUptVegS * aDRootVeg 
else
tPUptVegS = afPUptVegS * aVPUptMaxCrVeg * oPO4S / (aVPUptMaxCrVeg / cAffPUptVeg + oPO4S) * sDVeg 
end;
if (false == UseEmpUpt) 
tPUptVeg = tPUptVegW + tPUptVegS 
else
tPUptVeg = tPUptVegW + tPUptVegS 
end;
if (false == UseEmpUpt) 
aVNUptMaxCrVeg = max( 0.0, cVNUptMaxVeg * uFunTmProdVeg * (cNDVegMax - rNDVeg) / (cNDVegMax - cNDVegMin)) 
else
aVNUptMaxCrVeg = max( 0.0, cVNUptMaxVeg * uFunTmProdVeg * (cNDVegMax - rNDVeg) / (cNDVegMax - cNDVegMin)) 
end;
if (false == UseEmpUpt) 
ahNUptVeg = aVNUptMaxCrVeg / cAffNUptVeg 
else
ahNUptVeg = aVNUptMaxCrVeg / cAffNUptVeg 
end;
if (false == UseEmpUpt) 
aVNUptVegW = oNDissW * aVNUptMaxCrVeg / (ahNUptVeg + oNDissW) 
else
aVNUptVegW = 0.0 
end;
if (false == UseEmpUpt) 
afNH4UptVegW = sNH4W * sNO3W / ((ahNUptVeg + sNH4W) * (ahNUptVeg + sNO3W + NearZero)) + sNH4W * ahNUptVeg / ((sNH4W + sNO3W + NearZero) * (ahNUptVeg + sNO3W + NearZero)) 
else
afNH4UptVegW = sNH4W * sNO3W / ((ahNUptVeg + sNH4W) * (ahNUptVeg + sNO3W + NearZero)) + sNH4W * ahNUptVeg / ((sNH4W + sNO3W + NearZero) * (ahNUptVeg + sNO3W + NearZero)) 
end;
if (false == UseEmpUpt) 
tNUptVegW = aVNUptVegW * (aDSubVeg + aDFloatVeg) 
else
tNUptVegW = (1.0 - afNUptVegS) * aVNUptMaxCrVeg * oNDissW / (aVNUptMaxCrVeg / cAffNUptVeg + oNDissW) * sDVeg 
end;
if (false == UseEmpUpt) 
tNUptNH4VegW = afNH4UptVegW * tNUptVegW 
else
tNUptNH4VegW = afNH4UptVegW * tNUptVegW 
end;
if (false == UseEmpUpt) 
tNUptNO3VegW = tNUptVegW - tNUptNH4VegW 
else
tNUptNO3VegW = tNUptVegW - tNUptNH4VegW 
end;
if (false == UseEmpUpt) 
aVNUptVegS = oNDissS * aVNUptMaxCrVeg / (ahNUptVeg + oNDissS) 
else
aVNUptVegS = 0.0 
end;
if (false == UseEmpUpt) 
tNUptVegS = aVNUptVegS * aDRootVeg 
else
tNUptVegS = afNUptVegS * aVNUptMaxCrVeg * oNDissS / (aVNUptMaxCrVeg / cAffNUptVeg + oNDissS) * sDVeg 
end;
if (false == UseEmpUpt) 
afNH4UptVegS = oNH4S * oNO3S / ((ahNUptVeg + oNH4S +NearZero) * (ahNUptVeg + oNO3S +NearZero)) + oNH4S * ahNUptVeg / ((oNH4S + oNO3S+NearZero) * (ahNUptVeg + oNO3S+NearZero)) 
else
afNH4UptVegS = oNH4S * oNO3S / ((ahNUptVeg + oNH4S +NearZero) * (ahNUptVeg + oNO3S +NearZero)) + oNH4S * ahNUptVeg / ((oNH4S + oNO3S+NearZero) * (ahNUptVeg + oNO3S+NearZero)) 
end;
if (false == UseEmpUpt) 
tNUptNH4VegS = afNH4UptVegS * tNUptVegS 
else
tNUptNH4VegS = afNH4UptVegS * tNUptVegS 
end;
if (false == UseEmpUpt) 
tNUptNO3VegS = tNUptVegS - tNUptNH4VegS 
else
tNUptNO3VegS = tNUptVegS - tNUptNH4VegS 
end;
if (false == UseEmpUpt) 
tNUptVeg = tNUptVegW + tNUptVegS 
else
tNUptVeg = tNUptVegW + tNUptVegS 
end;
aLPAR1Veg = uLPARSurf * exp(- aExtCoefOpen * aDepth1Veg);
aLPAR2Veg = aLPAR1Veg * exp(- aExtCoef * (aDepth2Veg - aDepth1Veg));
uhLVeg = hLRefVeg * uFunTmProdVeg;
aLLimShootVeg = fEmergVeg + fFloatVeg * (1.0 - afCovEmergVeg) + bfSubVeg * (1.0 - afCovSurfVeg) * 1.0 / (aExtCoef * sDepthW) * log( (1.0 + aLPAR1Veg / uhLVeg) / (1.0 + aLPAR2Veg / uhLVeg));
aMuTmLVeg = ufDay * bfShootVeg * aLLimShootVeg * uFunTmProdVeg * cMuMaxVeg;
aPLimVeg = max(0.0, (1.0 - cPDVegMin / rPDVeg) * cPDVegMax / (cPDVegMax - cPDVegMin) );
aNLimVeg = max(0.0, (1.0 - cNDVegMin / rNDVeg) * cNDVegMax / (cNDVegMax - cNDVegMin) );
aNutLimVeg = min( aPLimVeg, aNLimVeg);
aMuVeg = aMuTmLVeg * aNutLimVeg;
if (false == InclSeason) 
bkMortVeg = kMortVegSum 
elseif (Day < cDayWinVeg) 
bkMortVeg = kMortVegSum 
elseif (Day < cDayWinVeg + cLengMort) 
bkMortVeg = - log(fWinVeg) / cLengMort 
else
bkMortVeg = kMortVegSum 
end;
akDIncrVeg = aMuTmLVeg - kDRespVeg * uFunTmRespVeg - bkMortVeg;
tDEnvVeg = max(0.0, akDIncrVeg / (cDCarrVeg+NearZero) * sDVeg*sDVeg);
tDEnvProdVeg = aMuVeg / cMuMaxVeg * tDEnvVeg;
tDProdVeg = max(0.0, aMuVeg * sDVeg - tDEnvProdVeg);
tDProdSubVeg = bfSubVeg * tDProdVeg;
tDRespVeg = kDRespVeg * uFunTmRespVeg * sDVeg;
tDEnvMortVeg = tDEnvVeg - tDEnvProdVeg;
tDMortVeg = bkMortVeg * sDVeg + tDEnvMortVeg;
tDMortVegW = fDetWMortVeg * (1.0 - bfRootVeg) * tDMortVeg;
tDMortVegS = tDMortVeg - tDMortVegW;
if ( (sTime >= cYearStartBirds * DaysPerYear) && (Day >= cDayStartBirds) && (Day <= cDayEndBirds) ) 
tDGrazVegBird = cPrefVegBird * sDVeg / (hDVegBird + sDVeg) * cBirdsPerha / m2Perha * cDGrazPerBird 
else
tDGrazVegBird = 0.0 
end;
if ((Day >= cDayManVeg1 && Day < cDayManVeg1 + cLengMan) || (Day >= cDayManVeg2 && Day < cDayManVeg2 + cLengMan)) 
bkManVeg = -log(1.0 - fManVeg) / cLengMan 
else
bkManVeg = 0.0 
end;
tDManVeg = bkManVeg * sDVeg;
tPManVeg = rPDVeg * tDManVeg;
tNManVeg = rNDVeg * tDManVeg;
tDBedVeg = tDMigrVeg + tDProdVeg - tDRespVeg - tDMortVeg - tDGrazVegBird - tDManVeg;
tO2ProdVeg = molO2molC * cCPerDW * tDProdVeg;
tO2RespVegW = molO2molC * cCPerDW * bfSubVeg * tDRespVeg * aCorO2BOD;
tO2RespVegS = molO2molC * cCPerDW * bfRootVeg * tDRespVeg * afOxySed;
tO2ProdVegS = min (tO2RespVegS, tO2ProdVeg);
tO2ProdVegW = min( tO2ProdVeg - tO2ProdVegS, bfSubVeg * tO2ProdVeg);
tO2UptNO3VegW = O2PerNO3 * molO2molN * bfSubVeg * tNUptNO3VegW;
tO2UptNO3VegS = O2PerNO3 * molO2molN * tNUptNO3VegS;
tPExcrVeg = (rPDVeg *2.0)/ (cPDVegMax + rPDVeg) * rPDVeg * tDRespVeg;
tPExcrVegS = bfRootVeg * tPExcrVeg;
tPExcrVegW = tPExcrVeg - tPExcrVegS;
tPMortVeg = rPDVeg * tDMortVeg;
tPMortVegPO4 = fDissMortVeg * tPMortVeg;
tPMortVegPO4S = bfRootVeg * tPMortVegPO4;
tPMortVegPO4W = tPMortVegPO4 - tPMortVegPO4S;
tPMortVegDet = tPMortVeg - tPMortVegPO4;
tPMortVegDetW = fDetWMortVeg * (1.0 - bfRootVeg) * tPMortVegDet;
tPMortVegDetS = tPMortVegDet - tPMortVegDetW;
tPGrazVegBird = rPDVeg * tDGrazVegBird;
tPBedVeg = tPMigrVeg + tPUptVeg - tPExcrVeg - tPMortVeg - tPGrazVegBird - tPManVeg;
tNExcrVeg = (2.0 * rNDVeg) / (cNDVegMax + rNDVeg) * rNDVeg * tDRespVeg;
tNExcrVegS = bfRootVeg * tNExcrVeg;
tNExcrVegW = tNExcrVeg - tNExcrVegS;
tNMortVeg = rNDVeg * tDMortVeg;
tNMortVegNH4 = fDissMortVeg * tNMortVeg;
tNMortVegNH4S = bfRootVeg * tNMortVegNH4;
tNMortVegNH4W = tNMortVegNH4 - tNMortVegNH4S;
tNMortVegDet = tNMortVeg - tNMortVegNH4;
tNMortVegDetW = fDetWMortVeg * (1.0 - bfRootVeg) * tNMortVegDet;
tNMortVegDetS = tNMortVegDet - tNMortVegDetW;
tNGrazVegBird = rNDVeg * tDGrazVegBird;
tNBedVeg = tNMigrVeg + tNUptVeg - tNExcrVeg - tNMortVeg - tNGrazVegBird - tNManVeg;
tDAssVegBird = fDAssBird * tDGrazVegBird;
tDEgesBird = tDGrazVegBird - tDAssVegBird;
tPAssVegBird = fDAssBird * tPGrazVegBird;
tPEgesBird = tPGrazVegBird - tPAssVegBird;
tPEgesBirdPO4 = fDissEgesBird * tPEgesBird;
tPEgesBirdDet = tPEgesBird - tPEgesBirdPO4;
tNAssVegBird = fDAssBird * tNGrazVegBird;
tNEgesBird = tNGrazVegBird - tNAssVegBird;
tNEgesBirdNH4 = fDissEgesBird * tNEgesBird;
tNEgesBirdDet = tNEgesBird - tNEgesBirdNH4;
wDBedDetW = (tDMortVegW + tDEgesBird) / sDepthW;
tDBedDetS = tDMortVegS;
tDBedTotT = tDMigrVeg + tDProdVeg - tDRespVeg - tDManVeg - tDAssVegBird;
wPBedPO4W = (- tPUptVegW + tPExcrVegW + tPMortVegPO4W + tPEgesBirdPO4) /sDepthW;
wPBedDetW = (tPMortVegDetW + tPEgesBirdDet) / sDepthW;
tPBedPO4S = - tPUptVegS + tPExcrVegS + tPMortVegPO4S;
tPBedDetS = tPMortVegDetS;
tPBedTotT = tPMigrVeg - tPManVeg - tPAssVegBird;
wNBedNH4W = (- tNUptNH4VegW + tNExcrVegW + tNMortVegNH4W + tNEgesBirdNH4) / sDepthW;
wNBedNO3W = - tNUptNO3VegW / sDepthW;
wNBedDetW = (tNMortVegDetW + tNEgesBirdDet) / sDepthW;
tNBedNH4S = - tNUptNH4VegS + tNExcrVegS + tNMortVegNH4S;
tNBedNO3S = - tNUptNO3VegS;
tNBedDetS = tNMortVegDetS;
tNBedTotT = tNMigrVeg - tNManVeg - tNAssVegBird;
tO2BedW = tO2ProdVegW - tO2RespVegW + tO2UptNO3VegW;
tO2BedS = tO2ProdVegS - tO2RespVegS + tO2UptNO3VegS;
if (InclWeb == true) 
UseLoss = 0.0 
else
UseLoss = 1.0 
end;
uFunTmLoss = exp(-0.5/(cSigTmLoss*cSigTmLoss) *((uTm-cTmOptLoss)*(uTm-cTmOptLoss) -(cTmRef-cTmOptLoss)*(cTmRef-cTmOptLoss)));
rPDBlueW = sPBlueW /(sDBlueW+NearZero);
rNDBlueW = sNBlueW /(sDBlueW+NearZero);
rPDBlueS = sPBlueS /(sDBlueS+NearZero);
rNDBlueS = sNBlueS /(sDBlueS+NearZero);
uFunTmBlue = exp(-0.5/(cSigTmBlue*cSigTmBlue) *((uTm-cTmOptBlue)*(uTm-cTmOptBlue) - (cTmRef-cTmOptBlue)*(cTmRef-cTmOptBlue)));
uFunTmProdBlue = uFunTmBlue;
uFunTmRespBlue = uFunTmBlue;
aVPUptMaxCrBlue = max(0.0,cVPUptMaxBlue * uFunTmProdBlue *(cPDBlueMax - rPDBlueW) /(cPDBlueMax - cPDBlueMin));
aVPUptBlue = sPO4W * aVPUptMaxCrBlue /(aVPUptMaxCrBlue / cAffPUptBlue + sPO4W);
wPUptBlue = aVPUptBlue * sDBlueW;
aVNUptMaxCrBlue = max(0.0,cVNUptMaxBlue * uFunTmProdBlue * (cNDBlueMax - rNDBlueW) /(cNDBlueMax - cNDBlueMin));
ahNUptBlue = aVNUptMaxCrBlue / cAffNUptBlue;
aVNUptBlue = oNDissW * aVNUptMaxCrBlue /(ahNUptBlue + oNDissW);
wNUptBlue = aVNUptBlue * sDBlueW;
afNH4UptBlue = sNH4W * sNO3W /((ahNUptBlue + sNH4W) *(ahNUptBlue + sNO3W)) + sNH4W * ahNUptBlue /((sNH4W + sNO3W) *(ahNUptBlue + sNO3W));
wNUptNH4Blue = afNH4UptBlue * wNUptBlue;
wNUptNO3Blue = wNUptBlue - wNUptNH4Blue;
uMuMaxTmBlue = cMuMaxBlue * uFunTmProdBlue;
aPLimBlue = max(0.0,(1.0 - cPDBlueMin / rPDBlueW) * cPDBlueMax /(cPDBlueMax - cPDBlueMin));
aNLimBlue = max(0.0,(1.0 - cNDBlueMin / rNDBlueW) * cNDBlueMax /(cNDBlueMax - cNDBlueMin));
aSiLimBlue = sSiO2W /(hSiAssBlue + sSiO2W);
aLLimBlue = UseSteeleBlue *(exp(1.0) /(aExtCoef * sDepthW) *(exp(- aLPARBot /(cLOptRefBlue * uFunTmProdBlue)) - exp(- uLPARSurf /(cLOptRefBlue * uFunTmProdBlue)))) +(1.0 - UseSteeleBlue) *(1.0 /(aExtCoef * sDepthW) * log((1.0 + uLPARSurf / (hLRefBlue * uFunTmProdBlue)) / (1.0 + aLPARBot /(hLRefBlue * uFunTmProdBlue))));
aMuTmLBlue = ufDay *(1.0 - afCovSurfVeg) * aLLimBlue * uMuMaxTmBlue;
aNutLimBlue = min(aPLimBlue,(min(aNLimBlue,aSiLimBlue)));
aMuBlue = aNutLimBlue * aMuTmLBlue;
wDAssBlue = aMuBlue*sDBlueW;
rChDBlue = cChDBlueMax -(cChDBlueMax - cChDBlueMin) * aLLimBlue;
oChlaBlue = mgPerg * rChDBlue * sDBlueW;
aExtChBlue = cExtSpBlue / rChDBlue;
ukDRespTmBlue = kDRespBlue * uFunTmRespBlue;
wDRespBlueW = ukDRespTmBlue * sDBlueW;
ukLossTmBlue = UseLoss * kLossBlue * uFunTmLoss;
wDLossBlue = ukLossTmBlue * sDBlueW;
wDMortBlueW = kMortBlueW * sDBlueW;
uCorVSetBlue = cVSetBlue * aFunTauSetOM * uFunTmSet;
tDSetBlue = uCorVSetBlue * sDBlueW;
tDResusBlue = sDBlueS /(aDPhytS+NearZero) * tDResusPhytTot;
tDRespBlueS = ukDRespTmBlue * sDBlueS;
tDMortBlueS = kMortBlueS * sDBlueS;
ukDDecBlue = ukDRespTmBlue + ukLossTmBlue + kMortBlueW +(uCorVSetBlue * uFunTmSet) / sDepthW;
wPExcrBlueW = (rPDBlueW * 2.0 )/(cPDBlueMax + rPDBlueW) * rPDBlueW * wDRespBlueW;
wPLossBlue = rPDBlueW * wDLossBlue;
wPMortBlueW = kMortBlueW * sPBlueW;
tPSetBlue = rPDBlueW * tDSetBlue;
tPResusBlue = rPDBlueS * tDResusBlue;
tPExcrBlueS = (rPDBlueS *2.0)/(cPDBlueMax + rPDBlueS) * rPDBlueS * tDRespBlueS;
tPMortBlueS = kMortBlueS * sPBlueS;
wNExcrBlueW = (rNDBlueW *2.0)/(cNDBlueMax + rNDBlueW) * rNDBlueW * wDRespBlueW;
wNLossBlue = rNDBlueW * wDLossBlue;
wNMortBlueW = kMortBlueW * sNBlueW;
tNSetBlue = rNDBlueW * tDSetBlue;
tNResusBlue = rNDBlueS * tDResusBlue;
tNExcrBlueS = (2.0 * rNDBlueS) /(cNDBlueMax + rNDBlueS) * rNDBlueS * tDRespBlueS;
tNMortBlueS = kMortBlueS * sNBlueS;
wDPrimBlueW = wDAssBlue - wDRespBlueW - wDLossBlue - wDMortBlueW -(tDSetBlue - tDResusBlue) / sDepthW;
wPPrimBlueW = wPUptBlue - wPExcrBlueW - wPLossBlue - wPMortBlueW -(tPSetBlue - tPResusBlue) / sDepthW;
wNPrimBlueW = wNUptBlue - wNExcrBlueW - wNLossBlue - wNMortBlueW -(tNSetBlue - tNResusBlue) / sDepthW;
if (InclPhytS == true) 
tDPrimBlueS = tDSetBlue - tDResusBlue - tDMortBlueS - tDRespBlueS 
else
tDPrimBlueS = 0.0 
end;
if (InclPhytS == true) 
tPPrimBlueS = tPSetBlue - tPResusBlue - tPMortBlueS - tPExcrBlueS 
else
tPPrimBlueS = 0.0 
end;
if (InclPhytS == true) 
tNPrimBlueS = tNSetBlue - tNResusBlue - tNMortBlueS - tNExcrBlueS 
else
tNPrimBlueS = 0.0 
end;
rPDGrenW = sPGrenW /(sDGrenW+NearZero);
rNDGrenW = sNGrenW /(sDGrenW+NearZero);
rPDGrenS = sPGrenS /(sDGrenS+NearZero);
rNDGrenS = sNGrenS /(sDGrenS+NearZero);
uFunTmGren = exp(-0.5/(cSigTmGren*cSigTmGren) *((uTm-cTmOptGren)*(uTm-cTmOptGren) - (cTmRef-cTmOptGren)*(cTmRef-cTmOptGren)));
uFunTmProdGren = uFunTmGren;
uFunTmRespGren = uFunTmGren;
aVPUptMaxCrGren = max(0.0,cVPUptMaxGren * uFunTmProdGren *(cPDGrenMax - rPDGrenW) /(cPDGrenMax - cPDGrenMin));
aVPUptGren = sPO4W * aVPUptMaxCrGren /(aVPUptMaxCrGren / cAffPUptGren + sPO4W);
wPUptGren = aVPUptGren * sDGrenW;
aVNUptMaxCrGren = max(0.0,cVNUptMaxGren * uFunTmProdGren * (cNDGrenMax - rNDGrenW) /(cNDGrenMax - cNDGrenMin));
ahNUptGren = aVNUptMaxCrGren / cAffNUptGren;
aVNUptGren = oNDissW * aVNUptMaxCrGren /(ahNUptGren + oNDissW);
wNUptGren = aVNUptGren * sDGrenW;
afNH4UptGren = sNH4W * sNO3W /((ahNUptGren + sNH4W) *(ahNUptGren + sNO3W)) + sNH4W * ahNUptGren /((sNH4W + sNO3W) *(ahNUptGren + sNO3W));
wNUptNH4Gren = afNH4UptGren * wNUptGren;
wNUptNO3Gren = wNUptGren - wNUptNH4Gren;
uMuMaxTmGren = cMuMaxGren * uFunTmProdGren;
aPLimGren = max(0.0,(1.0 - cPDGrenMin / rPDGrenW) * cPDGrenMax /(cPDGrenMax - cPDGrenMin));
aNLimGren = max(0.0,(1.0 - cNDGrenMin / rNDGrenW) * cNDGrenMax /(cNDGrenMax - cNDGrenMin));
aSiLimGren = sSiO2W /(hSiAssGren + sSiO2W);
aLLimGren = UseSteeleGren *(exp(1.0) /(aExtCoef * sDepthW) *(exp(- aLPARBot /(cLOptRefGren * uFunTmProdGren)) - exp(- uLPARSurf /(cLOptRefGren * uFunTmProdGren)))) +(1.0 - UseSteeleGren) *(1.0 /(aExtCoef * sDepthW) * log((1.0 + uLPARSurf / (hLRefGren * uFunTmProdGren)) / (1.0 + aLPARBot /(hLRefGren * uFunTmProdGren))));
aMuTmLGren = ufDay *(1.0 - afCovSurfVeg) * aLLimGren * uMuMaxTmGren;
aNutLimGren = min(aPLimGren,(min(aNLimGren,aSiLimGren)));
aMuGren = aNutLimGren * aMuTmLGren;
wDAssGren = aMuGren*sDGrenW;
rChDGren = cChDGrenMax -(cChDGrenMax - cChDGrenMin) * aLLimGren;
oChlaGren = mgPerg * rChDGren * sDGrenW;
aExtChGren = cExtSpGren / rChDGren;
ukDRespTmGren = kDRespGren * uFunTmRespGren;
wDRespGrenW = ukDRespTmGren * sDGrenW;
ukLossTmGren = UseLoss * kLossGren * uFunTmLoss;
wDLossGren = ukLossTmGren * sDGrenW;
wDMortGrenW = kMortGrenW * sDGrenW;
uCorVSetGren = cVSetGren * aFunTauSetOM * uFunTmSet;
tDSetGren = uCorVSetGren * sDGrenW;
tDResusGren = sDGrenS /(aDPhytS+NearZero) * tDResusPhytTot;
tDRespGrenS = ukDRespTmGren * sDGrenS;
tDMortGrenS = kMortGrenS * sDGrenS;
ukDDecGren = ukDRespTmGren + ukLossTmGren + kMortGrenW +(uCorVSetGren * uFunTmSet) / sDepthW;
wPExcrGrenW = (2.0 *rPDGrenW) /(cPDGrenMax + rPDGrenW) * rPDGrenW * wDRespGrenW;
wPLossGren = rPDGrenW * wDLossGren;
wPMortGrenW = kMortGrenW * sPGrenW;
tPSetGren = rPDGrenW * tDSetGren;
tPResusGren = rPDGrenS * tDResusGren;
tPExcrGrenS = (2.0 * rPDGrenS) /(cPDGrenMax + rPDGrenS) * rPDGrenS * tDRespGrenS;
tPMortGrenS = kMortGrenS * sPGrenS;
wNExcrGrenW = (2.0 * rNDGrenW) /(cNDGrenMax + rNDGrenW) * rNDGrenW * wDRespGrenW;
wNLossGren = rNDGrenW * wDLossGren;
wNMortGrenW = kMortGrenW * sNGrenW;
tNSetGren = rNDGrenW * tDSetGren;
tNResusGren = rNDGrenS * tDResusGren;
tNExcrGrenS = (2.0 * rNDGrenS) /(cNDGrenMax + rNDGrenS) * rNDGrenS * tDRespGrenS;
tNMortGrenS = kMortGrenS * sNGrenS;
wDPrimGrenW = wDAssGren - wDRespGrenW - wDLossGren - wDMortGrenW -(tDSetGren - tDResusGren) / sDepthW;
wPPrimGrenW = wPUptGren - wPExcrGrenW - wPLossGren - wPMortGrenW -(tPSetGren - tPResusGren) / sDepthW;
wNPrimGrenW = wNUptGren - wNExcrGrenW - wNLossGren - wNMortGrenW -(tNSetGren - tNResusGren) / sDepthW;
if (InclPhytS == true) 
tDPrimGrenS = tDSetGren - tDResusGren - tDMortGrenS - tDRespGrenS 
else
tDPrimGrenS = 0.0 
end;
if (InclPhytS == true) 
tPPrimGrenS = tPSetGren - tPResusGren - tPMortGrenS - tPExcrGrenS 
else
tPPrimGrenS = 0.0 
end;
if (InclPhytS == true) 
tNPrimGrenS = tNSetGren - tNResusGren - tNMortGrenS - tNExcrGrenS 
else
tNPrimGrenS = 0.0 
end;
rPDDiatW = sPDiatW /(sDDiatW+NearZero);
rNDDiatW = sNDiatW /(sDDiatW+NearZero);
rPDDiatS = sPDiatS /(sDDiatS+NearZero);
rNDDiatS = sNDiatS /(sDDiatS+NearZero);
uFunTmDiat = exp(-0.5/(cSigTmDiat*cSigTmDiat) *((uTm-cTmOptDiat)*(uTm-cTmOptDiat) - (cTmRef-cTmOptDiat)*(cTmRef-cTmOptDiat)));
uFunTmProdDiat = uFunTmDiat;
uFunTmRespDiat = uFunTmDiat;
aVPUptMaxCrDiat = max(0.0,cVPUptMaxDiat * uFunTmProdDiat *(cPDDiatMax - rPDDiatW) /(cPDDiatMax - cPDDiatMin));
aVPUptDiat = sPO4W * aVPUptMaxCrDiat /(aVPUptMaxCrDiat / cAffPUptDiat + sPO4W);
wPUptDiat = aVPUptDiat * sDDiatW;
aVNUptMaxCrDiat = max(0.0,cVNUptMaxDiat * uFunTmProdDiat * (cNDDiatMax - rNDDiatW) /(cNDDiatMax - cNDDiatMin));
ahNUptDiat = aVNUptMaxCrDiat / cAffNUptDiat;
aVNUptDiat = oNDissW * aVNUptMaxCrDiat /(ahNUptDiat + oNDissW);
wNUptDiat = aVNUptDiat * sDDiatW;
afNH4UptDiat = sNH4W * sNO3W /((ahNUptDiat + sNH4W) *(ahNUptDiat + sNO3W)) + sNH4W * ahNUptDiat /((sNH4W + sNO3W) *(ahNUptDiat + sNO3W));
wNUptNH4Diat = afNH4UptDiat * wNUptDiat;
wNUptNO3Diat = wNUptDiat - wNUptNH4Diat;
uMuMaxTmDiat = cMuMaxDiat * uFunTmProdDiat;
aPLimDiat = max(0.0,(1.0 - cPDDiatMin / rPDDiatW) * cPDDiatMax /(cPDDiatMax - cPDDiatMin));
aNLimDiat = max(0.0,(1.0 - cNDDiatMin / rNDDiatW) * cNDDiatMax /(cNDDiatMax - cNDDiatMin));
aSiLimDiat = sSiO2W /(hSiAssDiat + sSiO2W);
aLLimDiat = UseSteeleDiat *(exp(1.0) /(aExtCoef * sDepthW) *(exp(- aLPARBot /(cLOptRefDiat * uFunTmProdDiat)) - exp(- uLPARSurf /(cLOptRefDiat * uFunTmProdDiat)))) +(1.0 - UseSteeleDiat) *(1.0 /(aExtCoef * sDepthW) * log((1.0 + uLPARSurf / (hLRefDiat * uFunTmProdDiat)) / (1.0 + aLPARBot /(hLRefDiat * uFunTmProdDiat))));
aMuTmLDiat = ufDay *(1.0 - afCovSurfVeg) * aLLimDiat * uMuMaxTmDiat;
aNutLimDiat = min(aPLimDiat,(min(aNLimDiat,aSiLimDiat)));
aMuDiat = aNutLimDiat * aMuTmLDiat;
wDAssDiat = aMuDiat*sDDiatW;
rChDDiat = cChDDiatMax -(cChDDiatMax - cChDDiatMin) * aLLimDiat;
oChlaDiat = mgPerg * rChDDiat * sDDiatW;
aExtChDiat = cExtSpDiat / rChDDiat;
ukDRespTmDiat = kDRespDiat * uFunTmRespDiat;
wDRespDiatW = ukDRespTmDiat * sDDiatW;
ukLossTmDiat = UseLoss * kLossDiat * uFunTmLoss;
wDLossDiat = ukLossTmDiat * sDDiatW;
wDMortDiatW = kMortDiatW * sDDiatW;
uCorVSetDiat = cVSetDiat * aFunTauSetOM * uFunTmSet;
tDSetDiat = uCorVSetDiat * sDDiatW;
tDResusDiat = sDDiatS /(aDPhytS+NearZero) * tDResusPhytTot;
tDRespDiatS = ukDRespTmDiat * sDDiatS;
tDMortDiatS = kMortDiatS * sDDiatS;
ukDDecDiat = ukDRespTmDiat + ukLossTmDiat + kMortDiatW +(uCorVSetDiat * uFunTmSet) / sDepthW;
wPExcrDiatW = (2.0 * rPDDiatW) /(cPDDiatMax + rPDDiatW) * rPDDiatW * wDRespDiatW;
wPLossDiat = rPDDiatW * wDLossDiat;
wPMortDiatW = kMortDiatW * sPDiatW;
tPSetDiat = rPDDiatW * tDSetDiat;
tPResusDiat = rPDDiatS * tDResusDiat;
tPExcrDiatS = (2.0 * rPDDiatS) /(cPDDiatMax + rPDDiatS) * rPDDiatS * tDRespDiatS;
tPMortDiatS = kMortDiatS * sPDiatS;
wNExcrDiatW = (2.0 * rNDDiatW) /(cNDDiatMax + rNDDiatW) * rNDDiatW * wDRespDiatW;
wNLossDiat = rNDDiatW * wDLossDiat;
wNMortDiatW = kMortDiatW * sNDiatW;
tNSetDiat = rNDDiatW * tDSetDiat;
tNResusDiat = rNDDiatS * tDResusDiat;
tNExcrDiatS = (2.0 * rNDDiatS) /(cNDDiatMax + rNDDiatS) * rNDDiatS * tDRespDiatS;
tNMortDiatS = kMortDiatS * sNDiatS;
wDPrimDiatW = wDAssDiat - wDRespDiatW - wDLossDiat - wDMortDiatW -(tDSetDiat - tDResusDiat) / sDepthW;
wPPrimDiatW = wPUptDiat - wPExcrDiatW - wPLossDiat - wPMortDiatW -(tPSetDiat - tPResusDiat) / sDepthW;
wNPrimDiatW = wNUptDiat - wNExcrDiatW - wNLossDiat - wNMortDiatW -(tNSetDiat - tNResusDiat) / sDepthW;
if (InclPhytS == true) 
tDPrimDiatS = tDSetDiat - tDResusDiat - tDMortDiatS - tDRespDiatS 
else
tDPrimDiatS = 0.0 
end;
if (InclPhytS == true) 
tPPrimDiatS = tPSetDiat - tPResusDiat - tPMortDiatS - tPExcrDiatS 
else
tPPrimDiatS = 0.0 
end;
if (InclPhytS == true) 
tNPrimDiatS = tNSetDiat - tNResusDiat - tNMortDiatS - tNExcrDiatS 
else
tNPrimDiatS = 0.0 
end;
oChla = oChlaDiat + oChlaGren + oChlaBlue;
wDAssPhyt = wDAssDiat + wDAssGren + wDAssBlue;
wDRespPhytW = wDRespDiatW + wDRespGrenW + wDRespBlueW;
wDMortPhytW = wDMortDiatW + wDMortGrenW + wDMortBlueW;
tDSetPhyt = tDSetDiat + tDSetGren + tDSetBlue;
wDLossPhyt = wDLossDiat + wDLossGren + wDLossBlue;
wDPrimPhytW = wDPrimDiatW + wDPrimGrenW + wDPrimBlueW;
wPUptPhyt = wPUptDiat + wPUptGren + wPUptBlue;
wPExcrPhytW = wPExcrDiatW + wPExcrGrenW + wPExcrBlueW;
wPMortPhytW = wPMortDiatW + wPMortGrenW + wPMortBlueW;
tPSetPhyt = tPSetDiat + tPSetGren + tPSetBlue;
tPResusPhyt = tPResusDiat + tPResusGren + tPResusBlue;
wPLossPhyt = wPLossDiat + wPLossGren + wPLossBlue;
wPPrimPhytW = wPPrimDiatW + wPPrimGrenW + wPPrimBlueW;
wNUptPhyt = wNUptDiat + wNUptGren + wNUptBlue;
wNUptNH4Phyt = wNUptNH4Diat + wNUptNH4Gren + wNUptNH4Blue;
wNUptNO3Phyt = wNUptNO3Diat + wNUptNO3Gren + wNUptNO3Blue;
wNExcrPhytW = wNExcrDiatW + wNExcrGrenW + wNExcrBlueW;
wNMortPhytW = wNMortDiatW + wNMortGrenW + wNMortBlueW;
tNSetPhyt = tNSetDiat + tNSetGren + tNSetBlue;
tNResusPhyt = tNResusDiat + tNResusGren + tNResusBlue;
wNLossPhyt = wNLossDiat + wNLossGren + wNLossBlue;
wNPrimPhytW = wNPrimDiatW + wNPrimGrenW + wNPrimBlueW;
tDRespPhytS = tDRespDiatS + tDRespGrenS + tDRespBlueS;
tDMortPhytS = tDMortDiatS + tDMortGrenS + tDMortBlueS;
tDPrimPhytS = tDPrimDiatS + tDPrimGrenS + tDPrimBlueS;
tPExcrPhytS = tPExcrDiatS + tPExcrGrenS + tPExcrBlueS;
tPMortPhytS = tPMortDiatS + tPMortGrenS + tPMortBlueS;
tPPrimPhytS = tPPrimDiatS + tPPrimGrenS + tPPrimBlueS;
tNExcrPhytS = tNExcrDiatS + tNExcrGrenS + tNExcrBlueS;
tNMortPhytS = tNMortDiatS + tNMortGrenS + tNMortBlueS;
tNPrimPhytS = tNPrimDiatS + tNPrimGrenS + tNPrimBlueS;
wSiUptDiat = cSiDDiat * wDAssDiat;
wSiExcrDiatW = cSiDDiat * wDRespDiatW;
wSiLossDiat = cSiDDiat * wDLossDiat;
wSiMortDiatW = cSiDDiat * wDMortDiatW;
tSiSetDiat = cSiDDiat * tDSetDiat;
tSiResusDiat = cSiDDiat * tDResusDiat;
wSiPrimDiatW = wSiUptDiat - tSiSetDiat / sDepthW - wSiExcrDiatW - wSiMortDiatW - wSiLossDiat + tSiResusDiat / sDepthW;
rCyDBlue = cCyDBlueMax -(cCyDBlueMax - cCyDBlueMin) * aLLimBlue;
oCyan = rCyDBlue * sDBlueW * mgPerg;
fDDiat = sDDiatW /(sDDiatW + sDGrenW + sDBlueW + NearZero);
wDPrimDetW = wDMortPhytW + wDLossPhyt;
if (InclPhytS == true) 
tDPrimDetS = tDMortPhytS 
else
tDPrimDetS = tDSetPhyt 
end;
tDPrimTotT = (wDAssPhyt - wDRespPhytW) * sDepthW - tDRespPhytS;
wO2ProdPhyt = molO2molC * cCPerDW * wDAssPhyt;
wO2RespPhytW = molO2molC * cCPerDW * wDRespPhytW * aCorO2BOD;
wO2UptNO3Phyt = O2PerNO3 * molO2molN * wNUptNO3Phyt;
wO2PrimW = wO2ProdPhyt - wO2RespPhytW + wO2UptNO3Phyt;
tO2RespPhytS = molO2molC * cCPerDW * tDRespPhytS * afOxySed;
tO2PrimS = tO2RespPhytS;
wPMortPhytPO4W = fDissMortPhyt * wPMortPhytW;
wPMortPhytDetW = wPMortPhytW - wPMortPhytPO4W;
wPLossPhytPO4 = fDissLoss * wPLossPhyt;
wPLossPhytDet = wPLossPhyt - wPLossPhytPO4;
wPPrimPO4W = - wPUptPhyt + wPExcrPhytW + wPLossPhytPO4 + wPMortPhytPO4W;
wPPrimDetW = wPLossPhytDet + wPMortPhytDetW;
tPMortPhytPO4S = fDissMortPhyt * tPMortPhytS;
tPMortPhytDetS = tPMortPhytS - tPMortPhytPO4S;
if (InclPhytS == true) 
tPPrimDetS = tPMortPhytDetS 
else
tPPrimDetS = tPSetPhyt 
end;
tPPrimPO4S = tPExcrPhytS + tPMortPhytPO4S;
tPPrimTotT = 0.0;
wNMortPhytNH4W = fDissMortPhyt * wNMortPhytW;
wNMortPhytDetW = wNMortPhytW - wNMortPhytNH4W;
wNLossPhytNH4 = fDissLoss * wNLossPhyt;
wNLossPhytDet = wNLossPhyt - wNLossPhytNH4;
wNPrimNH4W = - wNUptNH4Phyt + wNExcrPhytW + wNLossPhytNH4 + wNMortPhytNH4W;
wNPrimNO3W = - wNUptNO3Phyt;
wNPrimDetW = wNLossPhytDet + wNMortPhytDetW;
tNMortPhytNH4S = fDissMortPhyt * tNMortPhytS;
tNMortPhytDetS = tNMortPhytS - tNMortPhytNH4S;
tNPrimNH4S = tNExcrPhytS + tNMortPhytNH4S;
tNPrimNO3S = 0.0;
if (InclPhytS == true) 
tNPrimDetS = tNMortPhytDetS 
else
tNPrimDetS = tNSetPhyt 
end;
tNPrimTotT = 0.0;
tSiExcrDiatS = cSiDDiat * tDRespDiatS;
tSiMortDiatS = cSiDDiat * tDMortDiatS;
wSiPrimSiO2W = wSiExcrDiatW - wSiUptDiat + tSiExcrDiatS / sDepthW;
wSiPrimDetW = wSiMortDiatW + wSiLossDiat;
if (InclPhytS == true) 
tSiPrimDiatS = tSiSetDiat - tSiResusDiat - tSiExcrDiatS - tSiMortDiatS 
else
tSiPrimDiatS = 0.0 
end;
if (InclPhytS == true) 
tSiPrimDetS = tSiMortDiatS 
else
tSiPrimDetS = tSiSetDiat 
end;
tSiPrimTotT = 0.0;
aPACoef = cPACoefMin +(cPACoefMax - cPACoefMin) * hPACoef / (hPACoef + oDOMW);
bSecchiMax = sDepthW + cSecchiPlus;
aSecchi = min(bSecchiMax,aPACoef / aExtCoefOpen);
aTransparency = aSecchi / sDepthW;
aDepthEuph = cEuph * aSecchi;
aRelDepthEuph = aDepthEuph / sDepthW;
aChlaH = oChla * sDepthW;
aCovPhytW = cCovSpPhyt *(oDPhytW * sDepthW);
rExtChPhyt = aExtPhyt /(oChla / mgPerg + NearZero);
uFunTmZoo = exp(-0.5/(cSigTmZoo*cSigTmZoo) *((uTm-cTmOptZoo)*(uTm-cTmOptZoo) -(cTmRef-cTmOptZoo)*(cTmRef-cTmOptZoo)));
rPDZoo = sPZoo /(sDZoo+NearZero);
rNDZoo = sNZoo/(sDZoo+NearZero);
oDFoodZoo = cPrefDiat * sDDiatW + cPrefGren * sDGrenW + cPrefBlue * sDBlueW + cPrefDet * sDDetW;
aFilt = cFiltMax * uFunTmZoo * hFilt /(hFilt + oDOMW);
ukDAssTmZoo = fDAssZoo * cFiltMax * uFunTmZoo * hFilt;
aDSatZoo = oDFoodZoo /(hFilt + oDOMW);
ukDRespTmZoo = kDRespZoo * uFunTmZoo;
ukDIncrZoo = ukDAssTmZoo - ukDRespTmZoo - kMortZoo;
wDEnvZoo = max(0.0,ukDIncrZoo / cDCarrZoo * sDZoo*sDZoo);
wDAssZoo = aDSatZoo *(ukDAssTmZoo * sDZoo - wDEnvZoo);
wDConsZoo = wDAssZoo / fDAssZoo;
wDConsDetZoo = cPrefDet*sDDetW / oDFoodZoo * wDConsZoo;
wDConsDiatZoo = cPrefDiat*sDDiatW / oDFoodZoo * wDConsZoo;
wDConsGrenZoo = cPrefGren*sDGrenW / oDFoodZoo * wDConsZoo;
wDConsBlueZoo = cPrefBlue*sDBlueW / oDFoodZoo * wDConsZoo;
wDConsPhytZoo = wDConsDiatZoo + wDConsGrenZoo + wDConsBlueZoo;
wDEgesZoo = wDConsZoo - wDAssZoo;
aCorDRespZoo = max(cPDZooRef / rPDZoo,cNDZooRef / rNDZoo);
wDRespZoo = aCorDRespZoo * ukDRespTmZoo * sDZoo;
wDMortZoo = kMortZoo * sDZoo +(1.0 - aDSatZoo) * wDEnvZoo;
oPFoodZoo = cPrefDiat*sPDiatW + cPrefGren*sPGrenW + cPrefBlue*sPBlueW + cPrefDet * sPDetW;
rPDFoodZoo = oPFoodZoo /(oDFoodZoo+NearZero);
wPConsDiatZoo = rPDDiatW * wDConsDiatZoo;
wPConsGrenZoo = rPDGrenW * wDConsGrenZoo;
wPConsBlueZoo = rPDBlueW * wDConsBlueZoo;
wPConsPhytZoo = wPConsDiatZoo + wPConsGrenZoo + wPConsBlueZoo;
wPConsDetZoo = rPDDetW * wDConsDetZoo;
wPConsZoo = wPConsPhytZoo + wPConsDetZoo;
afPAssZoo = min(1.0,cPDZooRef / rPDFoodZoo * fDAssZoo);
wPAssZoo = afPAssZoo * wPConsZoo;
wPEgesZoo = wPConsZoo - wPAssZoo;
wPEgesZooPO4 = fDissEgesZoo*wPEgesZoo;
wPEgesZooDet = wPEgesZoo - wPEgesZooPO4;
akPExcrZoo = rPDZoo / cPDZooRef * kDRespZoo * uFunTmZoo;
wPExcrZoo = akPExcrZoo*sPZoo;
wPMortZoo = rPDZoo * wDMortZoo;
wPMortZooPO4 = fDissMortZoo * wPMortZoo;
wPMortZooDet = wPMortZoo - wPMortZooPO4;
oNFoodZoo = cPrefDiat*sNDiatW + cPrefGren*sNGrenW + cPrefBlue*sNBlueW + cPrefDet*sNDetW;
rNDFoodZoo = oNFoodZoo /(oDFoodZoo+NearZero);
wNConsDiatZoo = rNDDiatW*wDConsDiatZoo;
wNConsGrenZoo = rNDGrenW*wDConsGrenZoo;
wNConsBlueZoo = rNDBlueW*wDConsBlueZoo;
wNConsPhytZoo = wNConsDiatZoo + wNConsGrenZoo + wNConsBlueZoo;
wNConsDetZoo = rNDDetW*wDConsDetZoo;
wNConsZoo = wNConsPhytZoo + wNConsDetZoo;
afNAssZoo = min(1.0,cNDZooRef / rNDFoodZoo * fDAssZoo);
wNAssZoo = afNAssZoo*wNConsZoo;
wNEgesZoo = wNConsZoo - wNAssZoo;
wNEgesZooNH4 = fDissEgesZoo*wNEgesZoo;
wNEgesZooDet = wNEgesZoo - wNEgesZooNH4;
kNExcrZoo = rNDZoo / cNDZooRef * kDRespZoo * uFunTmZoo;
wNExcrZoo = kNExcrZoo*sNZoo;
wNMortZoo = rNDZoo*wDMortZoo;
wNMortZooNH4 = fDissMortZoo*wNMortZoo;
wNMortZooDet = wNMortZoo - wNMortZooNH4;
wSiConsDiatZoo = cSiDDiat * wDConsDiatZoo;
uFunTmBent = exp(-0.5/(cSigTmBent*cSigTmBent) *((uTm-cTmOptBent)*(uTm-cTmOptBent) - (cTmRef-cTmOptBent)*(cTmRef-cTmOptBent)));
aDFoodBent = sDDetS + aDPhytS;
rPDBent = sPBent /(sDBent+NearZero);
rNDBent = sNBent /(sDBent+NearZero);
tDMigrBent = kMigrBent *(cDBentIn - sDBent);
aDSatBent = aDFoodBent /(hDFoodBent + aDFoodBent);
ukDIncrBent = (kDAssBent - kDRespBent) * uFunTmBent - kMortBent;
tDEnvBent = max(0.0,ukDIncrBent / cDCarrBent * sDBent*sDBent);
tDAssBent = aDSatBent *(kDAssBent * uFunTmBent * sDBent - tDEnvBent);
aDAssBentSp = tDAssBent / sDBent;
tDConsBent = tDAssBent / fDAssBent;
tDConsDetBent = sDDetS / aDFoodBent * tDConsBent;
tDConsDiatBent = sDDiatS / aDFoodBent * tDConsBent;
tDConsGrenBent = sDGrenS / aDFoodBent * tDConsBent;
tDConsBlueBent = sDBlueS / aDFoodBent * tDConsBent;
tDConsPhytBent = tDConsDiatBent + tDConsGrenBent + tDConsBlueBent;
tDEgesBent = tDConsBent - tDAssBent;
tDRespBent = (cPDBentRef / rPDBent) * kDRespBent * uFunTmBent * sDBent;
tDMortBent = kMortBent*sDBent +(1.0 - aDSatBent) * tDEnvBent;
aPFoodBent = sPDetS + aPPhytS;
rPDFoodBent = aPFoodBent /(aDFoodBent+NearZero);
tPConsDetBent = rPDDetS * tDConsDetBent;
tPConsDiatBent = rPDDiatS * tDConsDiatBent;
tPConsGrenBent = rPDGrenS * tDConsGrenBent;
tPConsBlueBent = rPDBlueS * tDConsBlueBent;
tPConsPhytBent = tPConsDiatBent + tPConsGrenBent + tPConsBlueBent;
tPConsBent = tPConsDetBent + tPConsPhytBent;
afPAssBent = min(1.0,cPDBentRef / rPDFoodBent * fDAssBent);
tPAssBent = afPAssBent * tPConsBent;
tPEgesBent = tPConsBent - tPAssBent;
tPEgesBentPO4 = fDissEgesBent * tPEgesBent;
tPEgesBentDet = (1.0 - fDissEgesBent) * tPEgesBent;
tPExcrBent = (rPDBent / cPDBentRef) * kDRespBent * uFunTmBent * sPBent;
tPMortBent = rPDBent * tDMortBent;
tPMortBentPO4 = fDissMortBent * tPMortBent;
tPMortBentDet = (1.0-fDissMortBent)*tPMortBent;
tPMigrBent = kMigrBent *(cPDBentRef*cDBentIn - sPBent);
aNFoodBent = sNDetS + aNPhytS;
rNDFoodBent = aNFoodBent /(aDFoodBent+NearZero);
tNMigrBent = kMigrBent *(cNDBentRef*cDBentIn - sNBent);
tNConsDetBent = rNDDetS * tDConsDetBent;
tNConsDiatBent = rNDDiatS * tDConsDiatBent;
tNConsGrenBent = rNDGrenS * tDConsGrenBent;
tNConsBlueBent = rNDBlueS * tDConsBlueBent;
tNConsPhytBent = tNConsDiatBent + tNConsGrenBent + tNConsBlueBent;
tNConsBent = tNConsDetBent + tNConsPhytBent;
afNAssBent = min(1.0,cNDBentRef / rNDFoodBent * fDAssBent);
tNAssBent = afNAssBent * tNConsBent;
tNEgesBent = tNConsBent - tNAssBent;
tNEgesBentNH4 = fDissEgesBent * tNEgesBent;
tNEgesBentDet = (1.0 - fDissEgesBent) * tNEgesBent;
tNExcrBent = (rNDBent / cNDBentRef) * kDRespBent * uFunTmBent * sNBent;
tNMortBent = rNDBent * tDMortBent;
tNMortBentNH4 = fDissMortBent*tNMortBent;
tNMortBentDet = (1.0-fDissMortBent)*tNMortBent;
tSiConsDiatBent = cSiDDiat * tDConsDiatBent;
aDFish = sDFiJv + sDFiAd;
aPFish = sPFiJv + sPFiAd;
aNFish = sNFiJv + sNFiAd;
rPDFiJv = sPFiJv /(sDFiJv+NearZero);
rPDFiAd = sPFiAd /(sDFiAd+NearZero);
rNDFiJv = sNFiJv /(sDFiJv+NearZero);
rNDFiAd = sNFiAd /(sDFiAd+NearZero);
if (false == InclSeason) 
tDReprFish = ((1/DaysPerYear)*fReprFish) * sDFiAd 
elseif (Day >= cDayReprFish && Day < cDayReprFish + 1.0) 
tDReprFish = fReprFish * sDFiAd 
else
tDReprFish = 0.0 
end;
if (false == InclSeason) 
tDAgeFish = ((1/DaysPerYear)*fAgeFish) * sDFiJv 
elseif (Day >= 364.0) 
tDAgeFish = fAgeFish * sDFiJv 
else
tDAgeFish = 0.0 
end;
aFunVegFish = max(0.0,1.0 - cRelVegFish * aCovVeg);
aDSatFiJv = (sDZoo * sDepthW) *(sDZoo * sDepthW) /(hDZooFiJv * hDZooFiJv + (sDZoo * sDepthW) *(sDZoo * sDepthW));
ukDIncrFiJv = (kDAssFiJv - kDRespFiJv) * uFunTmFish - kMortFiJv;
tDEnvFiJv = max(0.0,ukDIncrFiJv /(cDCarrFish - sDFiAd) * sDFiJv*sDFiJv);
tDAssFiJv = aDSatFiJv *(kDAssFiJv * uFunTmFish * sDFiJv - tDEnvFiJv);
tDConsFiJv = tDAssFiJv / fDAssFiJv;
tDEgesFiJv = tDConsFiJv - tDAssFiJv;
tDRespFiJv = (cPDFishRef / rPDFiJv) * kDRespFiJv * uFunTmFish * sDFiJv;
tDMortFiJv = kMortFiJv * sDFiJv +(1.0 - aDSatFiJv) * tDEnvFiJv;
tDMigrFiJv = kMigrFish *(cDFiJvIn - sDFiJv);
aDSatFiAd = (aFunVegFish * sDBent) *(aFunVegFish * sDBent) /(hDBentFiAd * hDBentFiAd + (aFunVegFish * sDBent) *(aFunVegFish * sDBent));
ukDIncrFiAd = (kDAssFiAd - kDRespFiAd) * uFunTmFish - kMortFiAd;
tDEnvFiAd = max(0.0,ukDIncrFiAd /(cDCarrFish - sDFiJv) * sDFiAd*sDFiAd);
tDAssFiAd = aDSatFiAd *(kDAssFiAd * uFunTmFish * sDFiAd - tDEnvFiAd);
tDConsFiAd = tDAssFiAd / fDAssFiAd;
tDEgesFiAd = tDConsFiAd - tDAssFiAd;
tDRespFiAd = (cPDFishRef / rPDFiAd) * kDRespFiAd * uFunTmFish * sDFiAd;
tDMortFiAd = kMortFiAd * sDFiAd +(1.0 - aDSatFiAd) * tDEnvFiAd;
if (cos(2.0 * Pi * sTime / DaysPerYear) > 0.1) 
ukHarvFish = kHarvFishWin 
else
ukHarvFish = kHarvFishSum 
end;
tDHarvFish = ukHarvFish * sDFiAd;
tDMigrFiAd = kMigrFish *(cDFiAdIn - sDFiAd);
tDMortFish = tDMortFiJv + tDMortFiAd;
tDMortFishBot = fDBone * tDMortFish;
tDMortFishDet = tDMortFish - tDMortFishBot;
tPReprFish = rPDFiAd * tDReprFish;
tPAgeFish = rPDFiJv * tDAgeFish;
tPMigrFiJv = kMigrFish *(cPDFishRef * cDFiJvIn - sPFiJv);
tPConsFiJv = rPDZoo * tDConsFiJv;
afPAssFiJv = min(1.0,cPDFishRef / rPDZoo * fDAssFiJv);
tPAssFiJv = afPAssFiJv * tPConsFiJv;
tPEgesFiJv = tPConsFiJv - tPAssFiJv;
tPExcrFiJv = (rPDFiJv / cPDFishRef) * kDRespFiJv * uFunTmFish * sPFiJv;
tPMortFiJv = rPDFiJv * tDMortFiJv;
tPMigrFiAd = kMigrFish *(cPDFishRef * cDFiAdIn - sPFiAd);
tPConsFiAd = rPDBent * tDConsFiAd;
afPAssFiAd = min(1.0,cPDFishRef / rPDBent * fDAssFiAd);
tPAssFiAd = afPAssFiAd * tPConsFiAd;
tPEgesFiAd = tPConsFiAd - tPAssFiAd;
tPExcrFiAd = (rPDFiAd / cPDFishRef) * kDRespFiAd * uFunTmFish * sPFiAd;
tPMortFiAd = rPDFiAd * tDMortFiAd;
tPHarvFish = rPDFiAd * tDHarvFish;
tPMortFish = tPMortFiJv + tPMortFiAd;
tPMortFishBot = fPBone * tPMortFish;
tPMortFishPO4 = fDissMortFish *(tPMortFish - tPMortFishBot);
tPMortFishDet = tPMortFish - tPMortFishBot - tPMortFishPO4;
tPEgesFish = tPEgesFiJv + tPEgesFiAd;
tPEgesFishPO4 = fDissEgesFish * tPEgesFish;
tPEgesFishDet = tPEgesFish - tPEgesFishPO4;
tNReprFish = rNDFiAd * tDReprFish;
tNAgeFish = rNDFiJv * tDAgeFish;
tNMigrFiJv = kMigrFish *(cNDFishRef * cDFiJvIn - sNFiJv);
tNConsFiJv = rNDZoo * tDConsFiJv;
afNAssFiJv = min(1.0,cNDFishRef / rNDZoo * fDAssFiJv);
tNAssFiJv = afNAssFiJv * tNConsFiJv;
tNEgesFiJv = tNConsFiJv - tNAssFiJv;
tNExcrFiJv = (rNDFiJv / cNDFishRef) * kDRespFiJv * uFunTmFish * sNFiJv;
tNMortFiJv = rNDFiJv * tDMortFiJv;
tNMigrFiAd = kMigrFish *(cNDFishRef * cDFiAdIn - sNFiAd);
tNConsFiAd = rNDBent * tDConsFiAd;
afNAssFiAd = min(1.0,cNDFishRef / rNDBent * fDAssFiAd);
tNAssFiAd = afNAssFiAd * tNConsFiAd;
tNEgesFiAd = tNConsFiAd - tNAssFiAd;
tNExcrFiAd = (rNDFiAd / cNDFishRef) * kDRespFiAd * uFunTmFish * sNFiAd;
tNMortFiAd = rNDFiAd * tDMortFiAd;
tNHarvFish = rNDFiAd * tDHarvFish;
tNMortFish = tNMortFiJv + tNMortFiAd;
tNMortFishBot = fDBone * tNMortFish;
tNMortFishNH4 = fDissMortFish *(tNMortFish - tNMortFishBot);
tNMortFishDet = tNMortFish - tNMortFishBot - tNMortFishNH4;
tNEgesFish = tNEgesFiJv + tNEgesFiAd;
tNEgesFishNH4 = fDissEgesFish * tNEgesFish;
tNEgesFishDet = tNEgesFish - tNEgesFishNH4;
uFunTmPisc = exp(-0.5 /(cSigTmPisc*cSigTmPisc) *((uTm - cTmOptPisc)*(uTm - cTmOptPisc) - (cTmRef - cTmOptPisc)*(cTmRef - cTmOptPisc)));
tDMigrPisc = kMigrPisc *(cDPiscIn - sDPisc);
if (false == InclMarsh || fMarsh <= NearZero) 
aDCarrPisc = max(cDCarrPiscMin,min(cDCarrPiscMax,cDCarrPiscBare)) 
elseif (sDShootPhra < cDPhraMinPisc) 
aDCarrPisc = cDCarrPiscMin 
elseif (aCovVeg < cCovVegMin) 
aDCarrPisc = max(cDCarrPiscMin,min(cDCarrPiscMax,fMarsh *(1.0/PerCent) * cRelPhraPisc)) 
else
aDCarrPisc = max(cDCarrPiscMin,min(cDCarrPiscMax,fMarsh *(1.0/PerCent) *(cRelPhraPisc + cRelVegPisc))) 
end;
aFunVegPisc = aDSubVeg /(hDVegPisc + aDSubVeg + NearZero);
aDSatPisc = aDFish*aDFish /(hDFishPisc*hDFishPisc + aDFish*aDFish);
akDIncrPisc = (kDAssPisc * aFunVegPisc - kDRespPisc) * uFunTmPisc - kMortPisc;
tDEnvPisc = max(0.0,akDIncrPisc / aDCarrPisc * sDPisc*sDPisc);
tDAssPisc = aDSatPisc *(kDAssPisc * aFunVegPisc * uFunTmPisc * sDPisc - tDEnvPisc);
tDConsPisc = tDAssPisc / fDAssPisc;
tDEgesPisc = tDConsPisc - tDAssPisc;
tDConsFiJvPisc = sDFiJv / aDFish * tDConsPisc;
tDConsFiAdPisc = tDConsPisc - tDConsFiJvPisc;
tDRespPisc = kDRespPisc * uFunTmPisc * sDPisc;
tDMortPisc = kMortPisc * sDPisc +(1.0 - aDSatPisc) * tDEnvPisc;
tDMortPiscBot = fDBone * tDMortPisc;
tDMortPiscDet = tDMortPisc - tDMortPiscBot;
if (cos(2.0*Pi * sTime / DaysPerYear) > 0.1) 
ukHarvPisc = kHarvPiscWin 
else
ukHarvPisc = kHarvPiscSum 
end;
tDHarvPisc = ukHarvPisc * sDPisc;
aPPisc = cPDPisc * sDPisc;
tPConsFiJvPisc = rPDFiJv * tDConsFiJvPisc;
tPConsFiAdPisc = rPDFiAd * tDConsFiAdPisc;
tPConsPisc = tPConsFiJvPisc + tPConsFiAdPisc;
rPDFoodPisc = tPConsPisc / tDConsPisc;
afPAssPisc = min(1.0,cPDPisc / rPDFoodPisc * fDAssPisc);
tPAssPisc = afPAssPisc * tPConsPisc;
tPEgesPisc = tPConsPisc - tPAssPisc;
tPEgesPiscPO4 = fDissEgesPisc * tPEgesPisc;
tPEgesPiscDet = tPEgesPisc - tPEgesPiscPO4;
tPExcrPisc = cPDPisc * tDRespPisc;
tPMortPisc = cPDPisc * tDMortPisc;
tPMortPiscBot = fPBone * tPMortPisc;
tPMortPiscPO4 = fDissMortPisc *(tPMortPisc - tPMortPiscBot);
tPMortPiscDet = tPMortPisc - tPMortPiscBot - tPMortPiscPO4;
tPMigrPisc = kMigrPisc *(cPDPisc * cDPiscIn - aPPisc);
tPHarvPisc = cPDPisc * tDHarvPisc;
aNPisc = cNDPisc * sDPisc;
tNConsFiJvPisc = rNDFiJv * tDConsFiJvPisc;
tNConsFiAdPisc = rNDFiAd * tDConsFiAdPisc;
tNConsPisc = tNConsFiJvPisc + tNConsFiAdPisc;
rNDFoodPisc = tNConsPisc / tDConsPisc;
afNAssPisc = min(1.0,cNDPisc / rNDFoodPisc * fDAssPisc);
tNAssPisc = afNAssPisc * tNConsPisc;
tNEgesPisc = tNConsPisc - tNAssPisc;
tNEgesPiscNH4 = fDissEgesPisc * tNEgesPisc;
tNEgesPiscDet = tNEgesPisc - tNEgesPiscNH4;
tNExcrPisc = cNDPisc * tDRespPisc;
tNMortPisc = cNDPisc * tDMortPisc;
tNMortPiscBot = fDBone * tNMortPisc;
tNMortPiscNH4 = fDissMortPisc *(tNMortPisc - tNMortPiscBot);
tNMortPiscDet = tNMortPisc - tNMortPiscBot - tNMortPiscNH4;
tNMigrPisc = kMigrPisc *(cNDPisc * cDPiscIn - aNPisc);
tNHarvPisc = cNDPisc * tDHarvPisc;
wDWebZoo = wDAssZoo - wDRespZoo - wDMortZoo - tDConsFiJv / sDepthW;
wPWebZoo = wPAssZoo - wPExcrZoo - wPMortZoo - tPConsFiJv / sDepthW;
wNWebZoo = wNAssZoo - wNExcrZoo - wNMortZoo - tNConsFiJv / sDepthW;
tDWebBent = tDMigrBent + tDAssBent - tDConsFiAd - tDRespBent - tDMortBent;
tPWebBent = tPMigrBent + tPAssBent - tPConsFiAd - tPExcrBent - tPMortBent;
tNWebBent = tNMigrBent + tNAssBent - tNConsFiAd - tNExcrBent - tNMortBent;
tDWebFiJv = tDMigrFiJv + tDReprFish - tDAgeFish + tDAssFiJv - tDRespFiJv - tDMortFiJv - tDConsFiJvPisc;
tPWebFiJv = tPMigrFiJv + tPReprFish - tPAgeFish + tPAssFiJv - tPExcrFiJv - tPMortFiJv - tPConsFiJvPisc;
tNWebFiJv = tNMigrFiJv + tNReprFish - tNAgeFish + tNAssFiJv - tNExcrFiJv - tNMortFiJv - tNConsFiJvPisc;
tDWebFiAd = tDMigrFiAd + tDAssFiAd - tDRespFiAd - tDMortFiAd - tDReprFish + tDAgeFish - tDConsFiAdPisc - tDHarvFish;
tPWebFiAd = tPMigrFiAd + tPAssFiAd - tPExcrFiAd - tPMortFiAd - tPReprFish + tPAgeFish - tPConsFiAdPisc - tPHarvFish;
tNWebFiAd = tNMigrFiAd + tNAssFiAd - tNExcrFiAd - tNMortFiAd - tNReprFish + tNAgeFish - tNConsFiAdPisc - tNHarvFish;
tDWebPisc = tDMigrPisc + tDAssPisc - tDRespPisc - tDMortPisc - tDHarvPisc;
if (false == InclWeb) 
wDWebDetW = 0.0 
else
wDWebDetW = - wDConsDetZoo + wDEgesZoo + wDMortZoo +(tDEgesFiJv + tDEgesFiAd + tDMortFishDet + tDEgesPisc + tDMortPiscDet) / sDepthW 
end;
if (false == InclWeb) 
wDWebDiatW = 0.0 
else
wDWebDiatW = - wDConsDiatZoo 
end;
if (false == InclWeb) 
wDWebGrenW = 0.0 
else
wDWebGrenW = - wDConsGrenZoo 
end;
if (false == InclWeb) 
wDWebBlueW = 0.0 
else
wDWebBlueW = - wDConsBlueZoo 
end;
if (false == InclWeb) 
tDWebDetS = 0.0 
else
tDWebDetS = - tDConsDetBent + tDEgesBent + tDMortBent 
end;
if (false == InclWeb) 
tDWebDiatS = 0.0 
else
tDWebDiatS = - tDConsDiatBent 
end;
if (false == InclWeb) 
tDWebGrenS = 0.0 
else
tDWebGrenS = - tDConsGrenBent 
end;
if (false == InclWeb) 
tDWebBlueS = 0.0 
else
tDWebBlueS = - tDConsBlueBent 
end;
tDWebPhytS = tDWebDiatS + tDWebGrenS + tDWebBlueS;
if (false == InclWeb) 
tDWebTotT = 0.0 
else
tDWebTotT = - wDRespZoo * sDepthW + tDMigrFiJv + tDMigrFiAd + tDMigrPisc + tDMigrBent - tDRespFiJv - tDRespFiAd - tDRespPisc - tDRespBent - tDMortFishBot - tDMortPiscBot - tDHarvFish - tDHarvPisc 
end;
if (false == InclWeb) 
wPWebPO4W = 0.0 
else
wPWebPO4W = wPExcrZoo + wPEgesZooPO4 + wPMortZooPO4 +(tPExcrFiJv + tPExcrFiAd + tPEgesFishPO4 + tPMortFishPO4 + tPExcrPisc + tPEgesPiscPO4 + tPMortPiscPO4) / sDepthW 
end;
if (false == InclWeb) 
wPWebDetW = 0.0 
else
wPWebDetW = - wPConsDetZoo + wPEgesZooDet + wPMortZooDet +(tPEgesFishDet + tPMortFishDet + tPEgesPiscDet + tPMortPiscDet) / sDepthW 
end;
if (false == InclWeb) 
wPWebDiatW = 0.0 
else
wPWebDiatW = - wPConsDiatZoo 
end;
if (false == InclWeb) 
wPWebGrenW = 0.0 
else
wPWebGrenW = - wPConsGrenZoo 
end;
if (false == InclWeb) 
wPWebBlueW = 0.0 
else
wPWebBlueW = - wPConsBlueZoo 
end;
if (false == InclWeb) 
tPWebPO4S = 0.0 
else
tPWebPO4S = tPExcrBent + tPEgesBentPO4 + tPMortBentPO4 
end;
if (false == InclWeb) 
tPWebDetS = 0.0 
else
tPWebDetS = - tPConsDetBent + tPEgesBentDet + tPMortBentDet 
end;
if (false == InclWeb) 
tPWebDiatS = 0.0 
else
tPWebDiatS = - tPConsDiatBent 
end;
if (false == InclWeb) 
tPWebGrenS = 0.0 
else
tPWebGrenS = - tPConsGrenBent 
end;
if (false == InclWeb) 
tPWebBlueS = 0.0 
else
tPWebBlueS = - tPConsBlueBent 
end;
tPWebPhytS = tPWebDiatS + tPWebGrenS + tPWebBlueS;
if (false == InclWeb) 
tPWebTotT = 0.0 
else
tPWebTotT = tPMigrFiJv + tPMigrFiAd + tPMigrPisc + tPMigrBent - tPMortFishBot - tPMortPiscBot - tPHarvFish - tPHarvPisc 
end;
if (false == InclWeb) 
wNWebNH4W = 0.0 
else
wNWebNH4W = wNExcrZoo + wNEgesZooNH4 + wNMortZooNH4 +(tNExcrFiJv + tNExcrFiAd + tNEgesFishNH4 + tNMortFishNH4 + tNExcrPisc + tNEgesPiscNH4 + tNMortPiscNH4) / sDepthW 
end;
if (false == InclWeb) 
wNWebNO3W = 0.0 
else
wNWebNO3W = 0.0 
end;
if (false == InclWeb) 
wNWebDetW = 0.0 
else
wNWebDetW = - wNConsDetZoo + wNEgesZooDet + wNMortZooDet +(tNEgesFishDet + tNMortFishDet + tNEgesPiscDet + tNMortPiscDet) / sDepthW 
end;
if (false == InclWeb) 
wNWebDiatW = 0.0 
else
wNWebDiatW = - wNConsDiatZoo 
end;
if (false == InclWeb) 
wNWebGrenW = 0.0 
else
wNWebGrenW = - wNConsGrenZoo 
end;
if (false == InclWeb) 
wNWebBlueW = 0.0 
else
wNWebBlueW = - wNConsBlueZoo 
end;
if (false == InclWeb) 
tNWebNH4S = 0.0 
else
tNWebNH4S = tNExcrBent + tNEgesBentNH4 + tNMortBentNH4 
end;
if (false == InclWeb) 
tNWebNO3S = 0.0 
else
tNWebNO3S = 0.0 
end;
if (false == InclWeb) 
tNWebDetS = 0.0 
else
tNWebDetS = - tNConsDetBent + tNEgesBentDet + tNMortBentDet 
end;
if (false == InclWeb) 
tNWebDiatS = 0.0 
else
tNWebDiatS = - tNConsDiatBent 
end;
if (false == InclWeb) 
tNWebGrenS = 0.0 
else
tNWebGrenS = - tNConsGrenBent 
end;
if (false == InclWeb) 
tNWebBlueS = 0.0 
else
tNWebBlueS = - tNConsBlueBent 
end;
tNWebPhytS = tNWebDiatS + tNWebGrenS + tNWebBlueS;
if (false == InclWeb) 
tNWebTotT = 0.0 
else
tNWebTotT = tNMigrFiJv + tNMigrFiAd + tNMigrPisc + tNMigrBent - tNMortFishBot - tNMortPiscBot - tNHarvFish - tNHarvPisc 
end;
wSiWebSiO2W = 0.0;
if (false == InclWeb) 
wSiWebDetW = 0.0 
else
wSiWebDetW = wSiConsDiatZoo 
end;
if (false == InclWeb) 
tSiWebDetS = 0.0 
else
tSiWebDetS = tSiConsDiatBent 
end;
if (false == InclWeb) 
tSiWebTotT = 0.0 
else
tSiWebTotT = 0.0 
end;
aPrefAve = (cPrefDiat * sDDiatW + cPrefGren * sDGrenW + cPrefBlue * sDBlueW + cPrefDet * sDDetW) / oDOMW;
wDConsZoo2 = aFilt * aPrefAve * oDOMW * sDZoo;
aDConsZooSp = wDConsZoo / sDZoo;
aDAssZooSp = wDAssZoo / sDZoo;
aDGrazSp = wDConsZoo / oDOMW;
aPConsZooSp = wPConsZoo / sPZoo;
aPGrazSp = wPConsZoo / oPOMW;
aNConsZooSp = wNConsZoo / sNZoo;
aNGrazSp = wNConsZoo / oNOMW;
if (InclMarsh == true && fMarsh > NearZero) 
afDShootPhra = sDShootPhra /(sDRootPhra + sDShootPhra) 
else
afDShootPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
rDSRPhra = sDShootPhra/sDRootPhra 
else
rDSRPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
rPDShootPhra = sPShootPhra/sDShootPhra 
else
rPDShootPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
rNDShootPhra = sNShootPhra/sDShootPhra 
else
rNDShootPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
rPDRootPhra = sPRootPhra/sDRootPhra 
else
rPDRootPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
rNDRootPhra = sNRootPhra/sDRootPhra 
else
rNDRootPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aLengShootPhra = sDShootPhra / cDStemPhra / cDensStemPhra 
else
aLengShootPhra = 0.0 
end;
if (Day < 1.0 || sTime < BeginTime + 1.0) 
bDayInitPhra = 367 
elseif (uTm >= cTmInitPhra && bDayInitPhra > 366) 
bDayInitPhra = Day 
else
bDayInitPhra = bDayInitPhra 
end;
if (false == InclMarsh || fMarsh <= NearZero) 
aDAllPhra = 0.0 
elseif (Day < bDayInitPhra) 
aDAllPhra = 0.0 
elseif (Day <= bDayInitPhra + 1.0 / kDAllPhra) 
aDAllPhra = fDAllPhra * sDRootPhra 
else
aDAllPhra = 0.0 
end;
if (false == InclSeason) 
tDAllPhra = 0.0 
elseif (false == InclMarsh || fMarsh <= NearZero) 
tDAllPhra = 0.0 
elseif (Day < bDayInitPhra) 
tDAllPhra = 0.0 
elseif (Day <= bDayInitPhra + 1.0 / kDAllPhra) 
tDAllPhra = kDAllPhra * aDAllPhra 
else
tDAllPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tNTransPhra = rNDRootPhra * tDAllPhra 
else
tNTransPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tPTransPhra = rPDRootPhra * tDAllPhra 
else
tPTransPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aVNUptPhraMaxCr = max(0.0,cVNUptPhraMax * ((cQ10ProdPhra )^ (0.1 *(uTm - cTmRef))) *(cNDPhraMax - rNDRootPhra) /(cNDPhraMax - cNDPhraMin)) 
else
aVNUptPhraMaxCr = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
ahNUptPhraS = aVNUptPhraMaxCr / cAffNUptPhra 
else
ahNUptPhraS = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aVNUptPhraS = aVNUptPhraMaxCr * oNDissSM /(ahNUptPhraS + oNDissSM) 
else
aVNUptPhraS = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tNUptPhraS = aVNUptPhraS * sDRootPhra 
else
tNUptPhraS = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tNUptNH4PhraS = sNH4SM / aNDissSM * tNUptPhraS 
else
tNUptNH4PhraS = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tNUptNO3PhraS = tNUptPhraS - tNUptNH4PhraS 
else
tNUptNO3PhraS = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tNUptShootPhra = afDShootPhra * tNUptPhraS 
else
tNUptShootPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tNUptRootPhra = tNUptPhraS - tNUptShootPhra 
else
tNUptRootPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aVPUptPhraMaxCr = max(0.0,cVPUptPhraMax * ((cQ10ProdPhra )^ (0.1 *(uTm - cTmRef))) *(cPDPhraMax - rPDRootPhra) /(cPDPhraMax - cPDPhraMin)) 
else
aVPUptPhraMaxCr = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
ahPUptPhraS = aVPUptPhraMaxCr / cAffPUptPhra 
else
ahPUptPhraS = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aVPUptPhraS = aVPUptPhraMaxCr * oPO4SM /(ahPUptPhraS + oPO4SM) 
else
aVPUptPhraS = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tPUptPhraS = aVPUptPhraS * sDRootPhra 
else
tPUptPhraS = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tPUptShootPhra = afDShootPhra * tPUptPhraS 
else
tPUptShootPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tPUptRootPhra = tPUptPhraS - tPUptShootPhra 
else
tPUptRootPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
uFunTmProdPhra = ((cQ10ProdPhra )^ (0.1 *(uTm - cTmRef))) 
else
uFunTmProdPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
ukDRespTmPhra = kDRespPhra * ((cQ10RespPhra )^ (0.1 *(uTm - cTmRef))) 
else
ukDRespTmPhra = 0.0 
end;
if (false == InclMarsh || fMarsh <= NearZero) 
aMuPhotPhra = 0.0 
elseif (aLengShootPhra >= sDepthWM) 
aMuPhotPhra = cMuPhraMax * uFunTmProdPhra * ufDay 
else
aMuPhotPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aNLimProdPhra = (1.0 - cNDPhraMin / rNDRootPhra) * cNDPhraMax /(cNDPhraMax - cNDPhraMin) 
else
aNLimProdPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aPLimProdPhra = (1.0 - cPDPhraMin / rPDRootPhra) * cPDPhraMax /(cPDPhraMax - cPDPhraMin) 
else
aPLimProdPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aNutLimPhra = min(aNLimProdPhra,aPLimProdPhra) 
else
aNutLimPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aMuPhra = aMuPhotPhra * aNutLimPhra 
else
aMuPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
akDIncrPhra = aMuPhotPhra - ukDRespTmPhra - kDMortShootPhra 
else
akDIncrPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tDDensPhra = max(0.0,akDIncrPhra / cDShootPhraMax * sDShootPhra * sDShootPhra) 
else
tDDensPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tDDensProdPhra = aMuPhra / cMuPhraMax * tDDensPhra 
else
tDDensProdPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tDProdPhra = aMuPhra * sDShootPhra - tDDensProdPhra 
else
tDProdPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tDProdShootPhra = afDShootPhra * tDProdPhra 
else
tDProdShootPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tDProdRootPhra = tDProdPhra - tDProdShootPhra 
else
tDProdRootPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tDRespShootPhra = ukDRespTmPhra * sDShootPhra 
else
tDRespShootPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tDRespRootPhra = ukDRespTmPhra * sDRootPhra 
else
tDRespRootPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tO2RespRootPhra = molO2molC * cCPerDW * tDRespRootPhra * afOxySedM 
else
tO2RespRootPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tO2FlowPhra = tO2RespRootPhra 
else
tO2FlowPhra = 0.0 
end;
if (Day < 180.0) 
bDayRealPhra = 367 
elseif (ufDay <= fDayWin && bDayRealPhra > 366) 
bDayRealPhra = Day 
else
bDayRealPhra = bDayRealPhra 
end;
if (false == InclMarsh || fMarsh <= NearZero) 
aDRealPhra = 0.0 
elseif (Day < bDayRealPhra) 
aDRealPhra = 0.0 
elseif (Day <= bDayRealPhra + 1.0 / kDRealPhra) 
aDRealPhra = fDRealPhra * sDShootPhra 
else
aDRealPhra = 0.0 
end;
if (false == InclSeason) 
tDRealPhra = 0.0 
elseif (false == InclMarsh || fMarsh <= NearZero) 
tDRealPhra = 0.0 
elseif (Day < bDayRealPhra) 
tDRealPhra = 0.0 
elseif (Day <= bDayRealPhra + 1.0 / kDRealPhra) 
tDRealPhra = kDRealPhra * aDRealPhra 
else
tDRealPhra = 0.0 
end;
if  (InclMarsh == true && fMarsh > NearZero) 
tNRetrPhra = rNDShootPhra * tDRealPhra 
else
tNRetrPhra = 0.0 
end;
if  (InclMarsh == true && fMarsh > NearZero) 
tPRetrPhra = rPDShootPhra * tDRealPhra 
else
tPRetrPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tDMortShootPhra = kDMortShootPhra * sDShootPhra 
else
tDMortShootPhra = 0.0 
end;
if  (InclMarsh == true && fMarsh > NearZero) 
tNMortShootPhra = rNDShootPhra * tDMortShootPhra 
else
tNMortShootPhra = 0.0 
end;
if  (InclMarsh == true && fMarsh > NearZero) 
tPMortShootPhra = rPDShootPhra * tDMortShootPhra 
else
tPMortShootPhra = 0.0 
end;
if  (InclMarsh == true && fMarsh > NearZero) 
tDMortRootPhra = kDMortRootPhra * sDRootPhra 
else
tDMortRootPhra = 0.0 
end;
if  (InclMarsh == true && fMarsh > NearZero) 
tNMortRootPhra = rNDRootPhra * tDMortRootPhra 
else
tNMortRootPhra = 0.0 
end;
if  (InclMarsh == true && fMarsh > NearZero) 
tPMortRootPhra = rPDRootPhra * tDMortRootPhra 
else
tPMortRootPhra = 0.0 
end;
if (false == InclMarsh || fMarsh > NearZero) 
tDManShootPhra = 0.0 
elseif ((Day >= cDayManPhra) && (Day < cDayManPhra + 1.0)) 
tDManShootPhra = fManPhra * sDShootPhra 
else
tDManShootPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tNManShootPhra = tDManShootPhra * rNDShootPhra 
else
tNManShootPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tPManShootPhra = tDManShootPhra * rPDShootPhra 
else
tPManShootPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tDIMSM = tDSetIMM 
else
tDIMSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tDHumSM = fRefrDetS * tDMinDetSM - tDMinHumSM 
else
tDHumSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tDDetSM = tDSetDetM - tDMinDetSM + tDSetPhytM + tDMortRootPhra 
else
tDDetSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
vDeltaSM = (tDIMSM / cRhoIM +(tDHumSM + tDDetSM) / cRhoOM)/(1.0 - bPorS) 
else
vDeltaSM = 0.0 
end;
if (false == InclMarsh || fMarsh <= NearZero) 
tDBurIMM = 0.0 
elseif (vDeltaSM >= 0.0) 
tDBurIMM = ((tDHumSM + tDDetSM) +(cRhoOM / cRhoIM) * tDIMSM) / ((sDHumSM + sDDetSM) / sDIMSM + cRhoOM / cRhoIM) 
else
tDBurIMM = ((tDHumSM + tDDetSM) +(cRhoOM / cRhoIM) * tDIMSM) / (fDOrgSoil /(1.0 - fDOrgSoil) + cRhoOM / cRhoIM) 
end;
if (false == InclMarsh || fMarsh <= NearZero) 
tDBurOMM = 0.0 
elseif (vDeltaSM >= 0.0) 
tDBurOMM = (sDHumSM + sDDetSM) / sDIMSM * tDBurIMM 
else
tDBurOMM = fDOrgSoil /(1.0 - fDOrgSoil) * tDBurIMM 
end;
if (false == InclMarsh || fMarsh <= NearZero) 
tDBurDetM = 0.0 
elseif (vDeltaSM >= 0.0) 
tDBurDetM = sDDetSM /(sDHumSM + sDDetSM) * tDBurOMM 
else
tDBurDetM = 0.0 
end;
if (false == InclMarsh || fMarsh <= NearZero) 
tDBurHumM = 0.0 
elseif (vDeltaSM >= 0.0) 
tDBurHumM = tDBurOMM - tDBurDetM 
else
tDBurHumM = tDBurOMM 
end;
if (false == InclMarsh || fMarsh <= NearZero) 
tDBurTotM = 0.0 
elseif (vDeltaSM >= 0.0) 
tDBurTotM = tDBurIMM + tDBurOMM 
else
tDBurTotM = tDBurIMM + tDBurOMM 
end;
if (false == InclMarsh || fMarsh <= NearZero) 
tPBurHumM = 0.0 
elseif (vDeltaSM >= 0.0) 
tPBurHumM = rPDHumSM * tDBurHumM 
else
tPBurHumM = cPDSoilOM * tDBurHumM 
end;
if (false == InclMarsh || fMarsh <= NearZero) 
tPBurDetM = 0.0 
elseif (vDeltaSM >= 0.0) 
tPBurDetM = rPDDetSM * tDBurDetM 
else
tPBurDetM = 0.0 
end;
if (false == InclMarsh || fMarsh <= NearZero) 
tPBurAIMM = 0.0 
elseif (vDeltaSM >= 0.0) 
tPBurAIMM = sPAIMSM / sDIMSM * tDBurIMM 
else
tPBurAIMM = 0.0 
end;
if (false == InclMarsh || fMarsh <= NearZero) 
tPBurPO4M = 0.0 
elseif (vDeltaSM >= 0.0) 
tPBurPO4M = sPO4SM *(vDeltaSM / cDepthSM) 
else
tPBurPO4M = cPO4Ground *(bPorSM * vDeltaSM) 
end;
if (false == InclMarsh || fMarsh <= NearZero) 
tPBurTotM = 0.0 
elseif (vDeltaSM >= 0.0) 
tPBurTotM = tPBurDetM + tPBurHumM + tPBurAIMM + tPBurPO4M 
else
tPBurTotM = tPBurHumM + tPBurAIMM + tPBurPO4M 
end;
if (false == InclMarsh || fMarsh <= NearZero) 
tNBurHumM = 0.0 
elseif (vDeltaSM >= 0.0) 
tNBurHumM = rNDHumSM * tDBurHumM 
else
tNBurHumM = cNDSoilOM * tDBurHumM 
end;
if (false == InclMarsh || fMarsh <= NearZero) 
tNBurDetM = 0.0 
elseif (vDeltaSM >= 0.0) 
tNBurDetM = rNDDetSM * tDBurDetM 
else
tNBurDetM = 0.0 
end;
if (false == InclMarsh || fMarsh <= NearZero) 
tNBurNH4M = 0.0 
elseif (vDeltaSM >= 0.0) 
tNBurNH4M = sNH4SM *(vDeltaSM / cDepthSM) 
else
tNBurNH4M = cNH4Ground *(bPorSM * vDeltaSM) 
end;
if (false == InclMarsh || fMarsh <= NearZero) 
tNBurNO3M = 0.0 
elseif (vDeltaSM >= 0.0) 
tNBurNO3M = sNO3SM *(vDeltaSM / cDepthSM) 
else
tNBurNO3M = cNO3Ground *(bPorSM * vDeltaSM) 
end;
if (false == InclMarsh || fMarsh <= NearZero) 
tNBurTotM = 0.0 
elseif (vDeltaSM >= 0.0) 
tNBurTotM = tNBurDetM + tNBurHumM + tNBurNH4M + tNBurNO3M 
else
tNBurTotM = tNBurHumM + tNBurNH4M + tNBurNO3M 
end;
if (false == InclMarsh || fMarsh <= NearZero) 
tSiBurDetM = 0.0 
elseif (vDeltaSM >= 0.0) 
tSiBurDetM = rSiDDetSM * tDBurDetM 
else
tSiBurDetM = 0.0 
end;
if (false == InclMarsh || fMarsh <= NearZero) 
tSiBurTotM = 0.0 
elseif (vDeltaSM >= 0.0) 
tSiBurTotM = tSiBurDetM 
else
tSiBurTotM = 0.0 
end;
if (false == InclMarsh || fMarsh <= NearZero) 
vDeltaWM = 0.0 
elseif (ConstDepth == true) 
vDeltaWM = 0.0 
else
vDeltaWM = - vDeltaSM 
end;
if (InclMarsh == true && fMarsh > NearZero) 
aRelDeltaWM = vDeltaWM / sDepthWM 
else
aRelDeltaWM = 0.0 
end;
tDSetTot = tDSetIM + tDSetDet + tDSetPhyt;
tPSetTot = tPSetAIM + tPSetDet + tPSetPhyt;
tNSetTot = tNSetDet + tNSetPhyt;
tDResusTot = tDResusDead + tDResusPhytTot;
tPResusTot = tPResusDet + tPResusAIM + tPResusPhyt + tPResusPO4;
tNResusTot = tNResusDet + tNResusNH4 + tNResusNO3 + tNResusPhyt;
if (sTime >= cDredStart * DaysPerYear) 
bTimeDred = (floor(TimeYears/cDredInterval) * cDredInterval) * DaysPerYear 
else
bTimeDred = -9999.999 
end;
if (sTime == bTimeDred) 
aDepthStart = sDepthW 
else
aDepthStart = aDepthStart 
end;
if ((sTime >= bTimeDred) && (sTime < bTimeDred + cLengDred) && (aDepthStart <= cDepthRef - cDepthS)) 
akDredDepth = (log(cDepthRef / aDepthStart)) / cLengDred 
else
akDredDepth = 0.0 
end;
if ((sTime >= bTimeDred) && (sTime < bTimeDred + cLengDred) && (aDepthStart <= cDepthRef - cDepthS)) 
akDred = (- log(1.0 - fEffDred)) / cLengDred 
else
akDred = 0.0 
end;
if ((sTime >= bTimeDred) && (sTime < bTimeDred + cLengDred) && (aDepthStart <= cDepthRef - cDepthS)) 
akDredBent = (- log(1.0 - fEffDredBent)) / cLengDred 
else
akDredBent = 0.0 
end;
vDredDepthW = akDredDepth * sDepthW;
tDDredDetS = akDred * sDDetS;
tPDredDetS = akDred * sPDetS;
tNDredDetS = akDred * sNDetS;
tSiDredDetS = akDred * sSiDetS;
tPDredAIMS = akDred * sPAIMS;
bRhoSolidSoil = fDOrgSoil * cRhoOM +(1.0 - fDOrgSoil) * cRhoIM;
tDDredNetSoil = -(tDDredDetS / cRhoOM) * bRhoSolidSoil;
tDDredNetIMS = (1.0 - fDOrgSoil) * tDDredNetSoil;
tDDredNetHumS = fDOrgSoil * tDDredNetSoil;
tPDredNetHumS = cPDSoilOM * tDDredNetHumS;
tNDredNetHumS = cNDSoilOM * tDDredNetHumS;
tDDredDiatS = akDred * sDDiatS;
tPDredDiatS = akDred * sPDiatS;
tNDredDiatS = akDred * sNDiatS;
tDDredGrenS = akDred * sDGrenS;
tPDredGrenS = akDred * sPGrenS;
tNDredGrenS = akDred * sNGrenS;
tDDredBlueS = akDred * sDBlueS;
tPDredBlueS = akDred * sPBlueS;
tNDredBlueS = akDred * sNBlueS;
tDDredPhytS = tDDredDiatS+tDDredGrenS+tDDredBlueS;
tPDredPhytS = tPDredDiatS+tPDredGrenS+tPDredBlueS;
tNDredPhytS = tNDredDiatS+tNDredGrenS+tNDredBlueS;
if (InclWeb == true) 
tDDredBent = akDredBent * sDBent 
else
tDDredBent = 0.0 
end;
if (InclWeb == true) 
tPDredBent = akDredBent * sPBent 
else
tPDredBent = 0.0 
end;
if (InclWeb == true) 
tNDredBent = akDredBent * sNBent 
else
tNDredBent = 0.0 
end;
tDDredVeg = akDred * sDVeg;
tPDredVeg = akDred * sPVeg;
tNDredVeg = akDred * sNVeg;
tDDredNetTot = tDDredDetS - tDDredNetSoil + tDDredPhytS + tDDredBent + tDDredVeg;
tPDredNetTot = tPDredDetS - tPDredNetHumS + tPDredAIMS + tPDredPhytS + tPDredBent + tPDredVeg;
tNDredNetTot = tNDredDetS - tNDredNetHumS + tNDredPhytS + tNDredBent + tNDredVeg;
tSiDredTot = tSiDredDetS + cSiDDiat * tDDredDiatS;
tDIMS = tDAbioIMS;
tDHumS = tDAbioHumS;
tDDetS = tDAbioDetS + tDPrimDetS + tDWebDetS + tDBedDetS;
vDeltaS = (tDIMS / cRhoIM +(tDHumS + tDDetS) / cRhoOM)/(1.0 - bPorS);
if (vDeltaS >= 0.0) 
tDBurIM = ((tDHumS + tDDetS) +(cRhoOM / cRhoIM) * tDIMS) / ((sDHumS + sDDetS) / sDIMS + cRhoOM / cRhoIM) 
else
tDBurIM = ((tDHumS + tDDetS) +(cRhoOM / cRhoIM) * tDIMS) / (fDOrgSoil /(1.0 - fDOrgSoil) + cRhoOM / cRhoIM) 
end;
if (vDeltaS >= 0.0) 
tDBurOM = (sDHumS + sDDetS) / sDIMS * tDBurIM 
else
tDBurOM = fDOrgSoil /(1.0 - fDOrgSoil) * tDBurIM 
end;
if (vDeltaS >= 0.0) 
tDBurDet = sDDetS /(sDHumS + sDDetS) * tDBurOM 
else
tDBurDet = 0.0 
end;
if (vDeltaS >= 0.0) 
tDBurHum = tDBurOM - tDBurDet 
else
tDBurHum = tDBurOM 
end;
if (vDeltaS >= 0.0) 
tDBurTot = tDBurIM + tDBurOM 
else
tDBurTot = tDBurIM + tDBurOM 
end;
if (vDeltaS >= 0.0) 
tPBurHum = rPDHumS * tDBurHum 
else
tPBurHum = cPDSoilOM * tDBurHum 
end;
if (vDeltaS >= 0.0) 
tPBurDet = rPDDetS * tDBurDet 
else
tPBurDet = 0.0 
end;
if (vDeltaS >= 0.0) 
tPBurAIM = sPAIMS / sDIMS * tDBurIM 
else
tPBurAIM = 0.0 
end;
if (vDeltaS >= 0.0) 
tPBurPO4 = sPO4S *(vDeltaS / cDepthS) 
else
tPBurPO4 = cPO4Ground *(bPorS * vDeltaS) 
end;
if (vDeltaS >= 0.0) 
tPBurTot = tPBurDet + tPBurHum + tPBurAIM + tPBurPO4 
else
tPBurTot = tPBurHum + tPBurAIM + tPBurPO4 
end;
if (vDeltaS >= 0.0) 
tNBurHum = rNDHumS * tDBurHum 
else
tNBurHum = cNDSoilOM * tDBurHum 
end;
if (vDeltaS >= 0.0) 
tNBurDet = rNDDetS * tDBurDet 
else
tNBurDet = 0.0 
end;
if (vDeltaS >= 0.0) 
tNBurNH4 = sNH4S *(vDeltaS / cDepthS) 
else
tNBurNH4 = cNH4Ground *(bPorS * vDeltaS) 
end;
if (vDeltaS >= 0.0) 
tNBurNO3 = sNO3S *(vDeltaS / cDepthS) 
else
tNBurNO3 = cNO3Ground *(bPorS * vDeltaS) 
end;
if (vDeltaS >= 0.0) 
tNBurTot = tNBurDet + tNBurHum + tNBurNH4 + tNBurNO3 
else
tNBurTot = tNBurHum + tNBurNH4 + tNBurNO3 
end;
if (vDeltaS >= 0.0) 
tSiBurDet = rSiDDetS * tDBurDet 
else
tSiBurDet = 0.0 
end;
if (vDeltaS >= 0.0) 
tSiBurTot = tSiBurDet 
else
tSiBurTot = 0.0 
end;
if (ConstDepth == true) 
vDeltaW = 0.0 
else
vDeltaW = - vDeltaS 
end;
aRelDeltaW = (vDeltaW + vDredDepthW) / sDepthW;
if (InclMarsh == true && fMarsh > NearZero) 
tDMarsTotT = (- tDBurTotM - wDMinDetWM * sDepthWM -(1.0 - fRefrDetS) * tDMinDetSM - tDMinHumSM + tDProdPhra - tDRespShootPhra - tDRespRootPhra - tDManShootPhra) * fMarsh 
else
tDMarsTotT = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tPMarsTotT = (- tPInfPO4SM - tPDifGroundPO4M - tPBurTotM - tPChemPO4M - tPManShootPhra) * fMarsh 
else
tPMarsTotT = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tNMarsTotT = (- tNInfNH4SM - tNInfNO3SM - tNDifGroundNO3M - tNDifGroundNH4M - tNBurTotM - wNDenitWM * sDepthWM - tNDenitSM - tNManShootPhra) * fMarsh 
else
tNMarsTotT = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
tSiMarsTotT = - tSiBurDetM * fMarsh 
else
tSiMarsTotT = 0.0 
end;
aDTotT = (sDIMW+sDDetW+sDDiatW+sDGrenW+sDBlueW+sDZoo) * sDepthW +aDFish+sDPisc+aDVeg +sDIMS+sDHumS+sDDetS+sDDiatS+sDGrenS+sDBlueS+sDBent + aDTotM;
aNTotT = (sNH4W+sNO3W+sNDetW+sNDiatW+sNGrenW+sNBlueW +sNZoo)*sDepthW +aNFish+aNPisc+aNVeg +sNH4S+sNO3S+sNDetS+sNHumS+sNDiatS+sNGrenS+sNBlueS +sNBent + aNTotM;
aPTotT = (sPO4W+sPDetW+sPDiatW+sPGrenW+sPBlueW +sPZoo+sPAIMW) * sDepthW +aPFish+aPPisc+aPVeg +sPO4S+sPDetS+sPHumS+sPDiatS+sPGrenS+sPBlueS +sPAIMS+sPBent + aPTotM;
aSiTotT = (sSiO2W + sSiDetW + cSiDDiat*sDDiatW) *sDepthW + sSiDetS + cSiDDiat*sDDiatS + aSiTotM;
aDError = aDTotT - sDExtTotT;
aNError = aNTotT - sNExtTotT;
aPError = aPTotT - sPExtTotT;
aSiError = aSiTotT - sSiExtTotT;
dDepthW = vTranDepthW + vDeltaW + vDredDepthW;
dNH4W = wNTranNH4W + wNAbioNH4W + wNPrimNH4W + wNBedNH4W + wNWebNH4W + cNBackLoad / sDepthW - aRelDeltaW * sNH4W - wNExchNH4;
dNO3W = wNTranNO3W + wNAbioNO3W + wNPrimNO3W + wNBedNO3W + wNWebNO3W - aRelDeltaW * sNO3W - wNExchNO3;
dPO4W = wPTranPO4W + wPAbioPO4W + wPPrimPO4W + wPBedPO4W + wPWebPO4W + cPBackLoad / sDepthW - aRelDeltaW * sPO4W - wPExchPO4;
dPAIMW = wPTranAIMW + wPAbioAIMW - aRelDeltaW * sPAIMW - wPExchAIM;
dSiO2W = wSiTranSiO2 + wSiAbioSiO2W + wSiPrimSiO2W - aRelDeltaW * sSiO2W - wSiExchSiO2;
dO2W = wO2TranW + wO2AbioW + wO2PrimW + tO2BedW / sDepthW - aRelDeltaW * sO2W - wO2Exch;
dDDetW = wDTranDetW + wDAbioDetW + wDPrimDetW + wDBedDetW + wDWebDetW - aRelDeltaW * sDDetW - wDExchDet;
dNDetW = wNTranDetW + wNAbioDetW + wNPrimDetW + wNBedDetW + wNWebDetW - aRelDeltaW * sNDetW - wNExchDet;
dPDetW = wPTranDetW + wPAbioDetW + wPPrimDetW + wPBedDetW + wPWebDetW - aRelDeltaW * sPDetW - wPExchDet;
dSiDetW = wSiTranDetW + wSiAbioDetW + wSiPrimDetW + wSiWebDetW - aRelDeltaW * sSiDetW - wSiExchDet;
dDIMW = wDTranIMW + wDAbioIMW - aRelDeltaW * sDIMW - wDExchIM;
dDDiatW = wDTranDiat + wDPrimDiatW + wDWebDiatW - aRelDeltaW * sDDiatW - wDExchDiat;
dNDiatW = wNTranDiat + wNPrimDiatW + wNWebDiatW - aRelDeltaW * sNDiatW - wNExchDiat;
dPDiatW = wPTranDiat + wPPrimDiatW + wPWebDiatW - aRelDeltaW * sPDiatW - wPExchDiat;
dDGrenW = wDTranGren + wDPrimGrenW + wDWebGrenW - aRelDeltaW * sDGrenW - wDExchGren;
dNGrenW = wNTranGren + wNPrimGrenW + wNWebGrenW - aRelDeltaW * sNGrenW - wNExchGren;
dPGrenW = wPTranGren + wPPrimGrenW + wPWebGrenW - aRelDeltaW * sPGrenW - wPExchGren;
dDBlueW = wDTranBlue + wDPrimBlueW + wDWebBlueW - aRelDeltaW * sDBlueW - wDExchBlue;
dNBlueW = wNTranBlue + wNPrimBlueW + wNWebBlueW - aRelDeltaW * sNBlueW - wNExchBlue;
dPBlueW = wPTranBlue + wPPrimBlueW + wPWebBlueW - aRelDeltaW * sPBlueW - wPExchBlue;
dDZoo = wDTranZoo + wDWebZoo - aRelDeltaW * sDZoo - wDExchZoo;
dNZoo = wNTranZoo + wNWebZoo - aRelDeltaW * sNZoo - wNExchZoo;
dPZoo = wPTranZoo + wPWebZoo - aRelDeltaW * sPZoo - wPExchZoo;
dDFiAd = tDWebFiAd;
dDFiJv = tDWebFiJv;
dNFiAd = tNWebFiAd;
dNFiJv = tNWebFiJv;
dPFiAd = tPWebFiAd;
dPFiJv = tPWebFiJv;
dDPisc = tDWebPisc;
dNH4S = tNAbioNH4S - tNBurNH4 + tNPrimNH4S + tNBedNH4S + tNWebNH4S;
dNO3S = tNAbioNO3S - tNBurNO3 + tNPrimNO3S + tNBedNO3S + tNWebNO3S;
dPO4S = tPAbioPO4S - tPBurPO4 + tPPrimPO4S + tPBedPO4S + tPWebPO4S;
dPAIMS = tPAbioAIMS - tPBurAIM - tPDredAIMS;
dDDetS = tDAbioDetS - tDBurDet + tDPrimDetS + tDBedDetS + tDWebDetS - tDDredDetS;
dNDetS = tNAbioDetS - tNBurDet + tNPrimDetS + tNBedDetS + tNWebDetS - tNDredDetS;
dPDetS = tPAbioDetS - tPBurDet + tPPrimDetS + tPBedDetS + tPWebDetS - tPDredDetS;
dSiDetS = tSiAbioDetS - tSiBurDet + tSiPrimDetS + tSiWebDetS - tSiDredDetS;
dDHumS = tDAbioHumS - tDBurHum - tDDredNetHumS;
dNHumS = tNAbioHumS - tNBurHum - tNDredNetHumS;
dPHumS = tPAbioHumS - tPBurHum - tPDredNetHumS;
dDIMS = tDAbioIMS - tDBurIM - tDDredNetIMS;
dDDiatS = tDPrimDiatS + tDWebDiatS - tDDredDiatS;
dNDiatS = tNPrimDiatS + tNWebDiatS - tNDredDiatS;
dPDiatS = tPPrimDiatS + tPWebDiatS - tPDredDiatS;
dDGrenS = tDPrimGrenS + tDWebGrenS - tDDredGrenS;
dNGrenS = tNPrimGrenS + tNWebGrenS - tPDredGrenS;
dPGrenS = tPPrimGrenS + tPWebGrenS - tPDredGrenS;
dDBlueS = tDPrimBlueS + tDWebBlueS - tDDredBlueS;
dNBlueS = tNPrimBlueS + tNWebBlueS - tNDredBlueS;
dPBlueS = tPPrimBlueS + tPWebBlueS - tPDredBlueS;
dDVeg = tDBedVeg - tDDredVeg;
dNVeg = tNBedVeg - tNDredVeg;
dPVeg = tPBedVeg - tPDredVeg;
dDBent = tDWebBent - tDDredBent;
dNBent = tNWebBent - tNDredBent;
dPBent = tPWebBent - tPDredBent;
if (InclMarsh == true && fMarsh > NearZero) 
dDepthWM = vTranDepthW + vDeltaWM 
else
dDepthWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dNH4WM = tNDifNH4M/sDepthWM - wNNitrWM + wNMinDetWM - tNEvNH4WM/sDepthWM - tNInfNH4WM/sDepthWM + wNExchNH4M - aRelDeltaWM * sNH4WM 
else
dNH4WM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dNO3WM = tNDifNO3M/sDepthWM + wNNitrWM - wNDenitWM - tNEvNO3WM/sDepthWM - tNInfNO3WM/sDepthWM + wNExchNO3M - aRelDeltaWM * sNO3WM 
else
dNO3WM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dPO4WM = - tPInfPO4WM / sDepthWM + tPDifPO4M / sDepthWM + wPMinDetWM - tPEvPO4WM / sDepthWM - wPSorpIMWM + wPExchPO4M - aRelDeltaWM * sPO4WM 
else
dPO4WM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dPAIMWM = - tPSetAIMM / sDepthWM + wPSorpIMWM + wPExchAIMM - aRelDeltaWM * sPAIMWM 
else
dPAIMWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dSiO2WM = wSiMinDetWM + tSiMinDetSM / sDepthWM + wSiExchSiO2M - aRelDeltaWM * sSiO2WM 
else
dSiO2WM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dO2WM = tO2AerM / sDepthWM - wO2MinDetWM - wO2NitrWM -(tO2MinDetSM + tO2NitrSM) / sDepthWM + wO2ExchM - aRelDeltaWM * sO2WM 
else
dO2WM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dDDetWM = tDMortShootPhra/sDepthWM - tDSetDetM/sDepthWM - wDMinDetWM + wDExchDetM - aRelDeltaWM * sDDetWM 
else
dDDetWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dNDetWM = tNMortShootPhra / sDepthWM - tNSetDetM / sDepthWM - wNMinDetWM + wNExchDetM - aRelDeltaWM * sNDetWM 
else
dNDetWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dPDetWM = tPMortShootPhra / sDepthWM - tPSetDetM / sDepthWM - wPMinDetWM + wPExchDetM - aRelDeltaWM * sPDetWM 
else
dPDetWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dSiDetWM = - tSiSetDetM / sDepthWM - wSiMinDetWM + wSiExchDetM - aRelDeltaWM * sSiDetWM 
else
dSiDetWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dDIMWM = - tDSetIMM/sDepthWM + wDExchIMM - aRelDeltaWM * sDIMWM 
else
dDIMWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dDDiatWM = wDExchDiatM - tDSetDiatM / sDepthWM - aRelDeltaWM * sDDiatWM 
else
dDDiatWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dNDiatWM = wNExchDiatM - tNSetDiatM / sDepthWM - aRelDeltaWM * sNDiatWM 
else
dNDiatWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dPDiatWM = wPExchDiatM - tPSetDiatM / sDepthWM - aRelDeltaWM * sPDiatWM 
else
dPDiatWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dDGrenWM = wDExchGrenM - tDSetGrenM / sDepthWM - aRelDeltaWM * sDGrenWM 
else
dDGrenWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dNGrenWM = wNExchGrenM - tNSetGrenM / sDepthWM - aRelDeltaWM * sNGrenWM 
else
dNGrenWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dPGrenWM = wPExchGrenM - tPSetGrenM / sDepthWM - aRelDeltaWM * sPGrenWM 
else
dPGrenWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dDBlueWM = wDExchBlueM - tDSetBlueM / sDepthWM - aRelDeltaWM * sDBlueWM 
else
dDBlueWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dNBlueWM = wNExchBlueM - tNSetBlueM / sDepthWM - aRelDeltaWM * sNBlueWM 
else
dNBlueWM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dPBlueWM = wPExchBlueM - tPSetBlueM / sDepthWM - aRelDeltaWM * sPBlueWM 
else
dPBlueWM = 0.0 
end;
if (false == InclMarsh || fMarsh <= NearZero) 
dDZooM = 0.0 
elseif (InclWeb == true) 
dDZooM = wDExchZooM - aRelDeltaWM * sDZooM 
else
dDZooM = 0.0 
end;
if (false == InclMarsh || fMarsh <= NearZero) 
dNZooM = 0.0 
elseif (InclWeb == true) 
dNZooM = wNExchZooM - aRelDeltaWM * sNZooM 
else
dNZooM = 0.0 
end;
if (false == InclMarsh || fMarsh <= NearZero) 
dPZooM = 0.0 
elseif (InclWeb == true) 
dPZooM = wPExchZooM - aRelDeltaWM * sPZooM 
else
dPZooM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dNH4SM = tNInfNH4WM - tNInfNH4SM +(1.0-fRefrDetS) * tNMinDetSM + tNMinHumSM - tNDifNH4M - tNDifGroundNH4M - tNNitrSM - tNBurNH4M - tNUptNH4PhraS + tNEvNH4WM 
else
dNH4SM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dNO3SM = tNInfNO3WM - tNInfNO3SM + tNNitrSM - tNDenitSM - tNDifNO3M - tNDifGroundNO3M - tNBurNO3M - tNUptNO3PhraS + tNEvNO3WM 
else
dNO3SM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dPO4SM = tPInfPO4WM - tPInfPO4SM + tPEvPO4WM +(1.0-fRefrDetS) * tPMinDetSM + tPMinHumSM - tPSorpIMSM - tPDifPO4M - tPDifGroundPO4M - tPChemPO4M - tPUptPhraS - tPBurPO4M 
else
dPO4SM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dPAIMSM = tPSetAIMM - tPBurAIMM + tPSorpIMSM 
else
dPAIMSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dDDetSM = tDMortRootPhra + tDSetDetM - tDMinDetSM + tDSetPhytM - tDBurDetM 
else
dDDetSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dNDetSM = tNMortRootPhra + tNSetDetM - tNMinDetSM + tNSetPhytM - tNBurDetM 
else
dNDetSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dPDetSM = tPMortRootPhra + tPSetDetM - tPMinDetSM + tPSetPhytM - tPBurDetM 
else
dPDetSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dSiDetSM = tSiSetDetM - tSiMinDetSM + cSiDDiat * tDSetDiatM - tSiBurDetM 
else
dSiDetSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dDHumSM = fRefrDetS * tDMinDetSM - tDMinHumSM - tDBurHumM 
else
dDHumSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dNHumSM = fRefrDetS * tNMinDetSM - tNMinHumSM - tNBurHumM 
else
dNHumSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dPHumSM = fRefrDetS * tPMinDetSM - tPMinHumSM - tPBurHumM 
else
dPHumSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dDIMSM = tDSetIMM - tDBurIMM 
else
dDIMSM = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dDRootPhra = tDProdRootPhra - tDRespRootPhra - tDMortRootPhra - tDAllPhra + tDRealPhra 
else
dDRootPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dDShootPhra = tDProdShootPhra - tDRespShootPhra - tDMortShootPhra + tDAllPhra - tDRealPhra - tDManShootPhra 
else
dDShootPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dNRootPhra = tNUptRootPhra - tNMortRootPhra - tNTransPhra + tNRetrPhra 
else
dNRootPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dNShootPhra = tNUptShootPhra - tNMortShootPhra + tNTransPhra - tNRetrPhra - tNManShootPhra 
else
dNShootPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dPRootPhra = tPUptRootPhra - tPMortRootPhra - tPTransPhra + tPRetrPhra 
else
dPRootPhra = 0.0 
end;
if (InclMarsh == true && fMarsh > NearZero) 
dPShootPhra = tPUptShootPhra - tPMortShootPhra + tPTransPhra - tPRetrPhra - tPManShootPhra 
else
dPShootPhra = 0.0 
end;
dDExtTotT = uDLoad - wDOutflTot*sDepthW + wDTranZoo * sDepthW - tDBurTot + tDAbioTotT + tDPrimTotT + tDBedTotT + tDWebTotT + tDMarsTotT - tDDredNetTot;
dNExtTotT = uNLoad - wNOutflTot * sDepthW + wNTranZoo * sDepthW + cNBackLoad - tNBurTot + tNAbioTotT + tNPrimTotT + tNBedTotT + tNWebTotT + tNMarsTotT - tNDredNetTot;
dPExtTotT = uPLoad - wPOutflTot * sDepthW + wPTranZoo * sDepthW + cPBackLoad - tPBurTot + tPAbioTotT + tPPrimTotT + tPBedTotT + tPWebTotT + tPMarsTotT - tPDredNetTot;
dSiExtTotT = uSiLoad - wSiDilTot*sDepthW + tSiAbioTotT - tSiBurTot + tSiPrimTotT + tSiMarsTotT - tSiDredTot;
sDepthW' = dDepthW;
sNH4W' = dNH4W;
sNO3W' = dNO3W;
sPO4W' = dPO4W;
sPAIMW' = dPAIMW;
sSiO2W' = dSiO2W;
sO2W' = dO2W;
sDDetW' = dDDetW;
sNDetW' = dNDetW;
sPDetW' = dPDetW;
sSiDetW' = dSiDetW;
sDIMW' = dDIMW;
sDDiatW' = dDDiatW;
sNDiatW' = dNDiatW;
sPDiatW' = dPDiatW;
sDGrenW' = dDGrenW;
sNGrenW' = dNGrenW;
sPGrenW' = dPGrenW;
sDBlueW' = dDBlueW;
sNBlueW' = dNBlueW;
sPBlueW' = dPBlueW;
sDZoo' = dDZoo;
sNZoo' = dNZoo;
sPZoo' = dPZoo;
sDFiAd' = dDFiAd;
sDFiJv' = dDFiJv;
sNFiAd' = dNFiAd;
sNFiJv' = dNFiJv;
sPFiAd' = dPFiAd;
sPFiJv' = dPFiJv;
sDPisc' = dDPisc;
sNH4S' = dNH4S;
sNO3S' = dNO3S;
sPO4S' = dPO4S;
sPAIMS' = dPAIMS;
sDDetS' = dDDetS;
sNDetS' = dNDetS;
sPDetS' = dPDetS;
sSiDetS' = dSiDetS;
sDHumS' = dDHumS;
sNHumS' = dNHumS;
sPHumS' = dPHumS;
sDIMS' = dDIMS;
sDDiatS' = dDDiatS;
sNDiatS' = dNDiatS;
sPDiatS' = dPDiatS;
sDGrenS' = dDGrenS;
sNGrenS' = dNGrenS;
sPGrenS' = dPGrenS;
sDBlueS' = dDBlueS;
sNBlueS' = dNBlueS;
sPBlueS' = dPBlueS;
sDVeg' = dDVeg;
sNVeg' = dNVeg;
sPVeg' = dPVeg;
sDBent' = dDBent;
sNBent' = dNBent;
sPBent' = dPBent;
sDepthWM' = dDepthWM;
sNH4WM' = dNH4WM;
sNO3WM' = dNO3WM;
sPO4WM' = dPO4WM;
sPAIMWM' = dPAIMWM;
sSiO2WM' = dSiO2WM;
sO2WM' = dO2WM;
sDDetWM' = dDDetWM;
sNDetWM' = dNDetWM;
sPDetWM' = dPDetWM;
sSiDetWM' = dSiDetWM;
sDIMWM' = dDIMWM;
sDDiatWM' = dDDiatWM;
sNDiatWM' = dNDiatWM;
sPDiatWM' = dPDiatWM;
sDGrenWM' = dDGrenWM;
sNGrenWM' = dNGrenWM;
sPGrenWM' = dPGrenWM;
sDBlueWM' = dDBlueWM;
sNBlueWM' = dNBlueWM;
sPBlueWM' = dPBlueWM;
sDZooM' = dDZooM;
sNZooM' = dNZooM;
sPZooM' = dPZooM;
sNH4SM' = dNH4SM;
sNO3SM' = dNO3SM;
sPO4SM' = dPO4SM;
sPAIMSM' = dPAIMSM;
sDDetSM' = dDDetSM;
sNDetSM' = dNDetSM;
sPDetSM' = dPDetSM;
sSiDetSM' = dSiDetSM;
sDHumSM' = dDHumSM;
sNHumSM' = dNHumSM;
sPHumSM' = dPHumSM;
sDIMSM' = dDIMSM;
sDRootPhra' = dDRootPhra;
sDShootPhra' = dDShootPhra;
sNRootPhra' = dNRootPhra;
sNShootPhra' = dNShootPhra;
sPRootPhra' = dPRootPhra;
sPShootPhra' = dPShootPhra;
sDExtTotT' = dDExtTotT;
sNExtTotT' = dNExtTotT;
sPExtTotT' = dPExtTotT;
sSiExtTotT' = dSiExtTotT;
sDepthW = 2;
sNH4W = 0.10000000149;
sNO3W = 0.10000000149;
sPO4W = 0.00999999978;
sPAIMW = 0;
sSiO2W = 3;
sO2W = 10;
sDDetW = 2;
sNDetW = 0.05000000075;
sPDetW = 0.00499999989;
sSiDetW = 0.01999999955;
sDIMW = 5;
sDDiatW = 0.5;
sNDiatW = 0.05000000075;
sPDiatW = 0.00499999989;
sDGrenW = 0.5;
sNGrenW = 0.05000000075;
sPGrenW = 0.00499999989;
sDBlueW = 3;
sNBlueW = 0.30000000447;
sPBlueW = 0.02999999933;
sDZoo = 0.05000000075;
sNZoo = 0.00350000007;
sPZoo = 0.000499999996275;
sDFiAd = 2;
sDFiJv = 0.5;
sNFiAd = 0.20000000298;
sNFiJv = 0.05000000075;
sPFiAd = 0.04399999976;
sPFiJv = 0.01099999994;
sDPisc = 0.00999999978;
sNH4S = 0.01999999955;
sNO3S = 0.00200000009;
sPO4S = 0.18170283715;
sPAIMS = 17.9885982064;
sDDetS = 181.70300722;
sNDetS = 4.54257524819;
sPDetS = 0.4542575079;
sSiDetS = 1.81703003159;
sDHumS = 3452.35708303;
sNHumS = 172.617856724;
sPHumS = 17.2617850293;
sDIMS = 32706.5402707;
sDDiatS = 0.00100000005;
sNDiatS = 0.00010000000624;
sPDiatS = 1.00000002515E-05;
sDGrenS = 0.00100000005;
sNGrenS = 0.00010000000624;
sPGrenS = 1.00000002515E-05;
sDBlueS = 0.00100000005;
sNBlueS = 0.00010000000624;
sPBlueS = 1.00000002515E-05;
sDVeg = 1;
sNVeg = 0.01999999955;
sPVeg = 0.00200000009;
sDBent = 1;
sNBent = 0.0700000003;
sPBent = 0.00999999978;
sDepthWM = 0.5;
sNH4WM = 0.10000000149;
sNO3WM = 0.10000000149;
sPO4WM = 0.00999999978;
sPAIMWM = 0;
sSiO2WM = 3;
sO2WM = 10;
sDDetWM = 2;
sNDetWM = 0.05000000075;
sPDetWM = 0.00499999989;
sSiDetWM = 0.01999999955;
sDIMWM = 5;
sDDiatWM = 0.5;
sNDiatWM = 0.05000000075;
sPDiatWM = 0.00499999989;
sDGrenWM = 0.5;
sNGrenWM = 0.05000000075;
sPGrenWM = 0.00499999989;
sDBlueWM = 3;
sNBlueWM = 0.30000000447;
sPBlueWM = 0.02999999933;
sDZooM = 0.05000000075;
sNZooM = 0.00350000007;
sPZooM = 0.000499999996275;
sNH4SM = 1;
sNO3SM = 0.00999999978;
sPO4SM = 0.18170283715;
sPAIMSM = 17.9885982064;
sDDetSM = 181.70300722;
sNDetSM = 4.54257524819;
sPDetSM = 0.4542575079;
sSiDetSM = 1.81703003159;
sDHumSM = 3452.35708303;
sNHumSM = 172.617856724;
sPHumSM = 17.2617850293;
sDIMSM = 32706.5402707;
sDRootPhra = 5000;
sDShootPhra = 1000;
sNRootPhra = 99.9999977648;
sNShootPhra = 19.999999553;
sPRootPhra = 10.000000475;
sPShootPhra = 2.00000009499;
sDExtTotT = 36367.21336;
sNExtTotT = 178.830732;
sPExtTotT = 36.06459358;
sSiExtTotT = 8.007180153;
InitCalc = 0
ConstDepth = 1
InclTran = 1
InclPhytS = 1
InclBed = 1
InclWeb = 1
InclMarsh = 1
InclSeason = 1
ReadTemp = 0
ReadLOut = 0
ReadVWind = 0
ReadQIn = 0
ReadQOut = 0
ReadQEv = 0
ReadPLoad = 0
ReadNLoad = 0
ReadNutFrac = 0
ReadPLoadPhyt = 0
ReadDLoadDet = 0
ReadDLoadIM = 0
UseSeasonLoad = 0
UsePulseLoad = 0
mTemp = 0
mLOut = 0
mVWind = 0
mQIn = 0
mQOut = 0
mQEv = 0
mPLoad = 0
mPLoadPO4 = 0
mPLoadOrg = 0
mPLoadPhytTot = 0
mNLoad = 0
mNLoadNH4 = 0
mNLoadNO3 = 0
mNLoadOrg = 0
mDLoadDet = 0
mDLoadIM = 0
BeginTime = 0
EndTime = 365
YearZero = 0
cFetch = 1000
fMarsh = 0
fLutum = 0.1
fFeDIM = 0.01
fAlDIM = 0.01
cTmAve = 12
cTmVar = 10
cTimeLag = 40
cVWind = 5
cQInf = 0
cPBackLoad = 0
cNBackLoad = 0
cLDayAve = 10000000
cLDayVar = 8000000
cfDayAve = 0.5
cfDayVar = 0.2
fRefl = 0.2
cExtWat = 0.5
cDredInterval = 9999000
cDredStart = 9999000
cDepthRef = 1E-28
cLengDred = 10
fEffDred = 0.95
fEffDredBent = 0.5
fPAR = 0.48
cExtSpDet = 0.15
cExtSpIM = 0.05
fDTotS0 = 0.3
fDOrgS0 = 0.1
fDDetS0 = 0.05
fSedPhyt0 = 0.01
fPInorgS0 = 0.0005
fPAdsS0 = 0.99
cPDDet0 = 0.0025
cNDDet0 = 0.025
cSiDDet0 = 0.01
cPDHum0 = 0.005
cNDHum0 = 0.05
cPDPhyt0 = 0.01
cNDPhyt0 = 0.1
cPDDiat0 = 0.01
cNDDiat0 = 0.1
cPDGren0 = 0.01
cNDGren0 = 0.1
cPDBlue0 = 0.01
cNDBlue0 = 0.1
cPDVeg0 = 0.002
cNDVeg0 = 0.02
cSiDDiat = 0.15
cPDZooRef = 0.01
cNDZooRef = 0.07
cPDBentRef = 0.01
cNDBentRef = 0.07
cPDFishRef = 0.022
cNDFishRef = 0.1
cPDPisc = 0.022
cNDPisc = 0.1
cQIn = 20
cQInSum = 20
cQInWin = 20
cDepthWMax = 5
cQInExtraApril1 = 0
cQInExtraOct1 = 0
cQOutExtraApril1 = 0
cQOutExtraOct1 = 0
cQEvAve = 1.5
cQEvVar = 1.3
cPLoad = 0.005
cPLoadSum = 0.005
cPLoadWin = 0.005
fPO4In = 0.5
fPhytInWin = 0.02
fPhytInSum = 0.1
fDiatPhytIn = 0.33
fGrenPhytIn = 0.34
fBluePhytIn = 0.33
cNLoad = 0.05
cNLoadSum = 0.05
cNLoadWin = 0.05
cNPLoadMeas = 7
cNPPhytIn = 7
cNPDetIn = 7
fNH4DissIn = 0.5
cNDPhytIn = 0.07
cNDDetIn = 0.07
cDIMIn = 5
cO2In = 5
cSiO2In = 3
cSiDDetIn = 0.05
cDZooIn = 0.1
cDayApril1 = 91
cDayOct1 = 273
cLengChange = 10
cNLoadS = 0
fNH4LoadS = 0.5
cDErosTot = 0.1
fSedErosIM = 0.95
fDOrgSoil = 0.1
cPDSoilOM = 0.001
cNDSoilOM = 0.01
cPO4Ground = 0.1
cNH4Ground = 1
cNO3Ground = 0.1
cDepthS = 0.1
cCPerDW = 0.4
cRhoIM = 2500000
cRhoOM = 1400000
cTmRef = 20
cAerRoot = 0.727
cAerLin = -0.371
cAerSquare = 0.0376
cThetaAer = 1.024
cVSetIM = 1
cVSetDet = 0.25
cThetaSet = 1.01
cSuspMin = 6.1
cSuspMax = 25.2
cSuspSlope = 2.1
hDepthSusp = 2
cFetchRef = 1000
fLutumRef = 0.2
cSuspRef = 0.5
kVegResus = 0.01
kTurbFish = 1
kResusPhytMax = 0.25
cResusPhytExp = -0.379
cThetaMinW = 1.07
kDMinDetW = 0.01
hO2BOD = 1
O2PerNO3 = 1.5
cThetaMinS = 1.07
kDMinDetS = 0.002
fRefrDetS = 0.15
hNO3Denit = 2
NO3PerC = 0.8
kDMinHum = 0.00001
kNitrW = 0.1
kNitrS = 1
cThetaNitr = 1.08
O2PerNH4 = 2
hO2Nitr = 2
kPDifPO4 = 0.000072
kNDifNO3 = 0.000086
kNDifNH4 = 0.000112
kO2Dif = 0.000026
cThetaDif = 1.02
fDepthDifS = 0.5
cTurbDifNut = 5
cTurbDifO2 = 5
kPSorp = 0.05
cRelPAdsD = 0.00003
cRelPAdsFe = 0.065
cRelPAdsAl = 0.134
cKPAdsOx = 0.6
fRedMax = 0.9
coPO4Max = 1
kPChemPO4 = 0.03
cDayManVeg1 = -9999000
cDayManVeg2 = -9999000
fManVeg = 0
cLengMan = 10
cYearStartBirds = 0
cDayStartBirds = 46
cDayEndBirds = 288
cBirdsPerha = 0
cDGrazPerBird = 45
hDVegBird = 5
fDAssBird = 0.5
fDissEgesBird = 0.25
fDissMortVeg = 0.25
cLengAllo = 15
cLengMort = 15
UseEmpUpt = 0
fSedUptVegMax = 0.998
fSedUptVegCoef = 2.66
fSedUptVegExp = -0.83
fRootVegSum = 0.1
fRootVegWin = 0.6
fFloatVeg = 0
fEmergVeg = 0
fDepth1Veg = 0
fDepth2Veg = 1
cDLayerVeg = 0
cCovSpVeg = 0.5
kMigrVeg = 0.001
cDVegIn = 1
cTmInitVeg = 9
cDCarrVeg = 400
cMuMaxVeg = 0.2
cQ10ProdVeg = 1.2
hLRefVeg = 17
cExtSpVeg = 0.01
kDRespVeg = 0.02
cQ10RespVeg = 2
kMortVegSum = 0.005
fWinVeg = 0.3
cDayWinVeg = 259
fDetWMortVeg = 0.1
cPrefVegBird = 1
cVPUptMaxVeg = 0.01
cAffPUptVeg = 0.2
cPDVegMin = 0.0008
cPDVegMax = 0.0035
cVNUptMaxVeg = 0.1
cAffNUptVeg = 0.2
cNDVegMin = 0.01
cNDVegMax = 0.035
cPACoefMin = 1.5
cPACoefMax = 2.5
hPACoef = 3
cSecchiPlus = 0
cEuph = 1.7
cCovSpPhyt = 2
cTmOptLoss = 25
cSigTmLoss = 13
fDissMortPhyt = 0.2
fDissLoss = 0.25
cMuMaxDiat = 2
cTmOptDiat = 18
cSigTmDiat = 20
cExtSpDiat = 0.25
UseSteeleDiat = 1
cLOptRefDiat = 54
hLRefDiat = 1000
cChDDiatMin = 0.004
cChDDiatMax = 0.012
kDRespDiat = 0.1
kLossDiat = 0.25
kMortDiatW = 0.01
kMortDiatS = 0.05
cVSetDiat = 0.5
cVPUptMaxDiat = 0.01
cAffPUptDiat = 0.2
cPDDiatMin = 0.0005
cPDDiatMax = 0.005
cVNUptMaxDiat = 0.07
cAffNUptDiat = 0.2
cNDDiatMin = 0.01
cNDDiatMax = 0.05
hSiAssDiat = 0.09
cMuMaxGren = 1.5
cTmOptGren = 25
cSigTmGren = 15
cExtSpGren = 0.25
UseSteeleGren = 0
hLRefGren = 17
cLOptRefGren = 1000
cChDGrenMin = 0.01
cChDGrenMax = 0.02
kDRespGren = 0.075
kLossGren = 0.25
kMortGrenW = 0.01
kMortGrenS = 0.05
cVSetGren = 0.2
cVPUptMaxGren = 0.01
cAffPUptGren = 0.2
cPDGrenMin = 0.0015
cPDGrenMax = 0.015
cVNUptMaxGren = 0.07
cAffNUptGren = 0.2
cNDGrenMin = 0.02
cNDGrenMax = 0.1
hSiAssGren = 0
cMuMaxBlue = 0.6
cTmOptBlue = 25
cSigTmBlue = 12
cExtSpBlue = 0.35
UseSteeleBlue = 1
cLOptRefBlue = 13.6
hLRefBlue = 1000
cChDBlueMin = 0.005
cChDBlueMax = 0.015
cCyDBlueMin = 0.004
cCyDBlueMax = 0.06
kDRespBlue = 0.03
kLossBlue = 0.03
kMortBlueW = 0.01
kMortBlueS = 0.2
cVSetBlue = 0.06
cVPUptMaxBlue = 0.04
cAffPUptBlue = 0.8
cPDBlueMin = 0.0025
cPDBlueMax = 0.025
cVNUptMaxBlue = 0.07
cAffNUptBlue = 0.2
cNDBlueMin = 0.03
cNDBlueMax = 0.15
hSiAssBlue = 0
cDBentIn = 0.01
kMigrBent = 0.001
kMigrFish = 0.001
cDFiJvIn = 0.005
cDFiAdIn = 0.005
kHarvFishWin = 0
kHarvFishSum = 0
cDPiscIn = 0.001
kMigrPisc = 0.001
kHarvPiscWin = 0
kHarvPiscSum = 0
cFiltMax = 4.5
hFilt = 1
cDCarrZoo = 25
cPrefDiat = 0.75
cPrefGren = 0.75
cPrefBlue = 0.125
cPrefDet = 0.25
fDAssZoo = 0.35
fDissEgesZoo = 0.25
kDRespZoo = 0.15
kMortZoo = 0.04
fDissMortZoo = 0.1
cTmOptZoo = 25
cSigTmZoo = 13
cDCarrBent = 10
kDAssBent = 0.1
hDFoodBent = 200
fDAssBent = 0.3
fDissEgesBent = 0.25
kDRespBent = 0.005
kMortBent = 0.005
fDissMortBent = 0.1
cTmOptBent = 25
cSigTmBent = 16
fDBone = 0.35
fPBone = 0.5
cDCarrFish = 15
fDissEgesFish = 0.25
fDissMortFish = 0.1
cTmOptFish = 25
cSigTmFish = 10
cDayReprFish = 120
fReprFish = 0.02
fAgeFish = 0.5
cRelVegFish = 0.009
kDAssFiJv = 0.12
hDZooFiJv = 1.25
fDAssFiJv = 0.4
kDRespFiJv = 0.01
kMortFiJv = 0.00137
kDAssFiAd = 0.06
hDBentFiAd = 2.5
fDAssFiAd = 0.4
kDRespFiAd = 0.004
kMortFiAd = 0.00027
cDCarrPiscMax = 1.2
cDCarrPiscMin = 0.1
cDCarrPiscBare = 0.1
cDPhraMinPisc = 50
cCovVegMin = 40
cRelPhraPisc = 0.075
cRelVegPisc = 0.03
kDAssPisc = 0.025
hDVegPisc = 5
hDFishPisc = 1
fDAssPisc = 0.4
fDissEgesPisc = 0.25
kDRespPisc = 0.005
kMortPisc = 0.00027
fDissMortPisc = 0.1
cTmOptPisc = 25
cSigTmPisc = 10
cDepthSM = 0.1
kExchMaxM = 1
hfMarsh = 0.1
fDTotSM0 = 0.3
fDOrgSM0 = 0.1
fDDetSM0 = 0.05
fPInorgSM0 = 0.0005
cPDPhra0 = 0.002
cNDPhra0 = 0.02
cDensStemPhra = 61.5
cTmInitPhra = 8
fDAllPhra = 0.3
kDAllPhra = 0.05
cDStemPhra = 6
cQ10ProdPhra = 2
cMuPhraMax = 0.03
cDShootPhraMax = 3500
cCovSpPhra = 0.1
cPDPhraMin = 0.0008
cPDPhraMax = 0.003
cNDPhraMin = 0.008
cNDPhraMax = 0.03
cAffNUptPhra = 0.0002
cAffPUptPhra = 0.0002
cVNUptPhraMax = 0.1
cVPUptPhraMax = 0.01
kDRespPhra = 0.001
cQ10RespPhra = 2.5
fDayWin = 0.52
fDRealPhra = 0.85
kDRealPhra = 0.05
kDMortShootPhra = 0
kDMortRootPhra = 0.000391
cDayWinPhra = 259
cDayManPhra = 255
fManPhra = 0
kDManShootPhra = 1
DaysPerYear = 365
TenDays = 10
HoursPerDay = 24
SecsPerDay = 86400
mmPerm = 1000
m2Perha = 10000
mgPerg = 1000
gPerkg = 1000
gPerton = 1000000
PerCent = 0.01
NearZero = 1E-28
molO2molC = 2.6667
molO2molN = 2.2857
molNmolC = 1.1667
cRhoWat = 1000000
Pi = 3.14159265358979
